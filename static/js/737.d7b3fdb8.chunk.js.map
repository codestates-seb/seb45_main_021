{"version":3,"file":"static/js/737.d7b3fdb8.chunk.js","mappings":"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","sources":["components/project/DateSelect.jsx","pages/ProjectWrite.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Select from \"../common/Select\";\nimport { checkValidations } from \"../../utils/checkValidations\";\n\nexport default function DateSelect ({\n    defaultDate,\n    width,\n    handleInputChange,\n    handleErrorChange\n}) {\n    const time = new Date()\n    const [resetDate, setResetDate] = useState([]);\n\n    useEffect(()=>{\n        if(defaultDate?.length) {\n            const parsingDate = new Date(defaultDate);\n            setResetDate([\n                parsingDate.getFullYear(),\n                parsingDate.getMonth()+1,\n                parsingDate.getDate(),\n            ])\n        }\n    },[defaultDate]);\n    \n    const yearOptions = () => {\n        const options = []\n        for(let i = time.getFullYear(); i <= time.getFullYear()+10; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const monthOptions = () => {\n        const options = []\n        for(let i = (time.getFullYear()===resetDate[0] ? time.getMonth()+1 : 1); i <= 12; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const dayOptions = () => {\n        const options = []\n        const days = new Date(resetDate[0], resetDate[1], 0).getDate();\n        for(let i = (time.getFullYear()===resetDate[0] && time.getMonth()+1===resetDate[1]) ? time.getMonth()+1 : 1; i <= days; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    \n    const setOptions = [yearOptions(), monthOptions(), dayOptions()]\n\n    const settingByIndex = (idx,e) => {\n        if(idx === 0) {\n            const newDate = [...resetDate];\n            newDate[0] = e;\n            newDate[1] = '-';\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 1) {\n            const newDate = [...resetDate];\n            newDate[1] = e;\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 2) {\n            const newDate = [...resetDate];\n            newDate[2] = e;\n            return newDate;\n        }\n    }\n\n    return (\n        <>\n            {resetDate.map((el,idx)=>\n                <Select\n                    key={idx}\n                    width={width}\n                    options={setOptions[idx]}\n                    defaultLabel={el}\n                    onClickHandler={(e)=>{\n                        setResetDate(settingByIndex(idx,e));\n                        if(idx === 2) {\n                            handleInputChange(null,String(new Date(resetDate[0],resetDate[1]-1,e)), 'closedAt')\n                            handleErrorChange(null,String(new Date(resetDate[0],resetDate[1],e)), 'closedAt', checkValidations)\n                        } else {\n                            handleInputChange(null,'', 'closedAt')\n                            handleErrorChange(null,'', 'closedAt', checkValidations)\n                        }\n                    }}\n                />\n            )}\n        </>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport  useForm  from '../hooks/useForm';\nimport DateSelect from '../components/project/DateSelect';\nimport Page from './../components/common/Page';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteHeader from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport languages from '../static/languages'\nimport { projectErrorInitData, projectWriteInitData, projectWriteRule } from '../static/projectInit';\nimport SubmitModalBox from '../components/PfPjPublic/SubmitModalBox';\nimport { writeSubmitHandler } from '../utils/writeSubmitHandler';\nimport Modal from '../components/common/Modal';\nimport { custom, desktop, tablet } from '../static/theme';\nimport Spinner from '../components/common/Spinner';\nimport { useSelector } from 'react-redux';\nimport api from '../hooks/useAxiosInterceptor'\n\nconst StyleProjectWrite = styled(Page)`\n  height:auto;\n  background-color: transparent;\n  padding-top:6rem;\n  font-size:1.6rem;\n\n  .margin-top-remove {\n    margin-top:-20px !important;\n  }\n\n  .input-container {\n    width:40%;\n    height:100%;\n    > div {\n      margin-bottom:3rem;\n    }\n  }\n\n  .write-wrapper {\n    gap:3rem;\n  }\n\n  .imgs-container {\n    width:60%;\n    height:auto;\n    > div {\n      margin-bottom:6rem;\n    }\n  }\n  .submit-box {\n    width:100%;\n    margin-bottom:10rem;\n    display:flex;\n    button {\n      font-size:1.6rem;\n      padding:5px 15px;\n      margin-right:5rem;\n    }\n  }\n  .data-select-container {\n    gap:1rem;\n    div {\n      flex:1;\n    }\n  }\n  ${custom(900)}{\n    .write-wrapper{\n      flex-direction: column;\n    }\n    .input-container {\n      width:100%;\n    }\n    .imgs-container {\n      width:100%;\n    }\n  }\n`\n\nexport default function ProjectWrite() {\n  const {toProject} = useNav();\n  const [dataForm, handleInputChange] = useForm(projectWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError(projectErrorInitData, projectWriteRule);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, setApiResult] = useState(false);\n  //false면 프론트측 에러 true면 백측에러\n  const [whichError, setWhichError] = useState(false);\n  const [isLoading ,setIsLoading] = useState(false);\n  const loginUserData = useSelector(state=>state.user);\n\n  const width = '100%';\n  const height = '23rem';\n\n  const languagesOptions = (() => {\n      const arr = [];\n      arr.push({value : '', label : '-'});\n      for(let i = 0; i < languages.length; i++) {\n        arr.push({value: languages[i], label : languages[i]});\n      }\n      return arr;\n  })()\n\n\n  const totalPeopleOptions = [\n    {value : '', label : '-'},\n    {value : '2', label : '2'},\n    {value : '3', label : '3'},\n    {value : '4', label : '4'},\n    {value : '5', label : '5'},\n    {value : '6', label : '6'},\n    {value : '7', label : '7'},\n    {value : '8', label : '8'},\n    {value : '9', label : '9'},\n    {value : '10', label : '10'},\n  ]\n  \n  return (\n    <StyleProjectWrite className='col'>\n      {showModal && <Modal\n        type={'alert'}\n        setIsOpen={setShowModal}\n        title={isLoading ? '' : apiResult ? '작성 완료' : `${whichError ? '통신 에러' : '입력 형식 오류'}`}\n        body={isLoading ? '' : apiResult ? '확인 버튼 클릭시 프로젝트 리스트 화면으로 넘어갑니다.' : `${whichError ? '서버와의 통신에 실패했습니다. 다시 시도해 주세요' : '필수 입력 양식을 다시 확인해 주세요.'}`}\n        confirmHandler={() => {apiResult ? toProject() : setShowModal(false)}}\n      />}\n      <WriteHeader type='project'/>\n      <div className='write-wrapper row'>\n        <div className='input-container col'>\n          <Input\n            label={'프로젝트 제목'}\n            width={'100%'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value,'title');\n              handleErrorChange(null,e.target.value,'title',checkValidations);\n            }}\n            placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n            type='text'\n            maxLength={30}\n          />\n\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.title.max}\n            proGressNum={dataForm.title.length ?? 0}\n            error={dataForm.title.length < 10 ? true : false}\n          />\n\n          <SelectBox\n            text={'사용할 언어를 선택 해주세요.'}\n            component={<Select\n              width={width}\n              options={languagesOptions}\n              defaultLabel={'-'}\n              onClickHandler={(e)=>{\n                handleInputChange(null,e,'lang')\n                handleErrorChange(null,e,'lang',checkValidations)\n              }}\n            />}\n            error={errors.lang}\n            name='언어'\n          />\n\n          <SelectBox\n            text={'모집할 인원을 선택해주세요.'}\n            component={<Select\n              width={width}\n              options={totalPeopleOptions}\n              defaultLabel={'-'}\n              onClickHandler={(e)=>{\n                handleInputChange(null,e, 'totalPeople')\n                handleErrorChange(null,e,'totalPeople',checkValidations)\n              }}\n            />}\n            error={errors.totalPeople}\n            name='모집 인원'\n          />\n\n          <SelectBox\n            text={'프로젝트 마감 날짜를 선택 해 주세요. (모집 시작은 작성일 기준입니다.)'}\n            component={<div className='data-select-container row'>\n              <DateSelect\n                defaultDate={dataForm.closedAt}\n                width={width}\n                handleInputChange={handleInputChange}\n                handleErrorChange={handleErrorChange}/>\n            </div>}\n            error={errors.closedAt}\n            name='마감 날짜'\n          />\n          \n          <EnterTag\n            width=\"100%\"\n            height=\"3.5rem\"\n            placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n          />\n          \n          <Input\n            label={'기획서'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'body')\n              handleErrorChange(null,e.target.value,'body',checkValidations)\n            }}\n            placeholder={'최소 100 ~ 500글자까지 입력 가능합니다. (필수)'}\n            maxLength={500}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.body.max}\n            proGressNum={dataForm.body.length ?? 0}\n            error={dataForm.body.length < 100 ? true : false}\n          />\n\n          <Input\n            label={'상세 요강'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'description')\n              handleErrorChange(null,e.target.value, 'description', checkValidations)\n            }}\n            placeholder={'최대 200글자까지 입력 가능합니다. (선택)'}\n            maxLength={200}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.description.max}\n            proGressNum={dataForm.description.length ?? 0}\n            error={dataForm.description.length > 200 ? true : false}\n          />\n        </div>\n\n        <div className='imgs-container col'>\n          <FileInput\n            name={'타이틀 이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={1}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            handleErrorChange={handleErrorChange}\n            clearError={clearError}\n          />\n\n          <FileInput\n            name={'이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={7}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n          />\n\n        </div>\n      </div>\n      <SubmitModalBox\n        submitTitle={'작성 확인'}\n        submitMessage={'최초 작성시 설정한 모집 인원은 수정 할 수 없습니다.'}\n        submitCheckHandler={() => {\n          setShowModal(true);\n          setIsLoading(true);\n          writeSubmitHandler(dataForm,errors,setErrors,'project', loginUserData.userInfo.memberId)\n          .then(()=>setApiResult(true))\n          .catch((err)=>{\n            setWhichError(err==='formError' ? false : true);\n            setApiResult(false)})\n          .finally(()=>setIsLoading(false));\n        }}\n        cancelTitle={'취소 확인'}\n        cancelMessage={'취소시 작성한 내용은 저장되지 않습니다.'}\n        cancelCheckHandler ={toProject}\n      />\n    </StyleProjectWrite>\n  );\n}"],"names":["DateSelect","_ref","defaultDate","width","handleInputChange","handleErrorChange","time","Date","_useState","useState","_useState2","_slicedToArray","resetDate","setResetDate","useEffect","length","parsingDate","getFullYear","getMonth","getDate","setOptions","options","i","push","value","label","yearOptions","monthOptions","days","dayOptions","_jsx","_Fragment","children","map","el","idx","Select","defaultLabel","onClickHandler","e","newDate","_toConsumableArray","settingByIndex","String","checkValidations","StyleProjectWrite","styled","Page","_templateObject","_taggedTemplateLiteral","custom","ProjectWrite","_dataForm$title$lengt","_dataForm$body$length","_dataForm$description","toProject","useNav","_useForm","useForm","projectWriteInitData","_useForm2","dataForm","_useError","useError","projectErrorInitData","projectWriteRule","_useError2","errors","clearError","setErrors","showModal","setShowModal","_useState3","_useState4","apiResult","setApiResult","_useState5","_useState6","whichError","setWhichError","_useState7","_useState8","isLoading","setIsLoading","loginUserData","useSelector","state","user","height","languagesOptions","arr","languages","_jsxs","className","Modal","type","setIsOpen","title","concat","body","confirmHandler","WriteHeader","Input","onChange","target","placeholder","maxLength","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","lang","name","totalPeople","closedAt","EnterTag","description","FileInput","number","SubmitModalBox","submitTitle","submitMessage","submitCheckHandler","writeSubmitHandler","userInfo","memberId","then","catch","err","finally","cancelTitle","cancelMessage","cancelCheckHandler"],"sourceRoot":""}