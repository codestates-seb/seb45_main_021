{"version":3,"file":"static/js/489.0b2dbf80.chunk.js","mappings":"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","sources":["components/PfPjPublic/EnterTag.jsx","components/PfPjPublic/ReplaceNewLine.jsx","components/PfPjPublic/SelectBox.jsx","components/PfPjPublic/WriteHeader.jsx","components/common/FileInput.jsx","components/common/Input.jsx","components/common/Modal.jsx","components/common/ProGress.jsx","components/common/Select.jsx","hooks/useError.jsx","utils/writeSubmitHandler.js","hooks/useSubmitWriteEdit.jsx","utils/returnErrorMsg.js","static/languages.js","static/portfolioInit.js","static/projectInit.js","utils/checkValidations.js"],"sourcesContent":["import styled from 'styled-components';\nimport Input from '../common/Input';\nimport { useEffect, useState } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst StyleEnterTag = styled.div`\n  .row {\n    flex-wrap: wrap;\n    gap: 1rem;\n  }\n  .box-title {\n    font-size: 1.6rem;\n    font-weight: var(--nanum-semi-bold);\n  }\n`;\n\nconst StyleTag = styled.div`\n  margin: 10px 0;\n  padding: ${(props) => props.$padding || '7px'};\n  font-size: ${(props) => props.$padding || '1.5rem'};\n  font-weight: var(--nanum-bold);\n  border: 1px solid var(--black-400);\n  border-radius: 5px;\n  display: inline;\n  transition: all.2s;\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  > svg:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default function EnterTag({\n  width,\n  height,\n  placeholder,\n  defaultTags = [],\n  handleInputChange,\n  ...rest\n}) {\n  const [tags, setTags] = useState(defaultTags);\n  useEffect(() => {\n    if (defaultTags?.length) {\n      setTags(defaultTags);\n    }\n  }, [defaultTags]);\n\n  const enterTagHandler = (e) => {\n    const noSpecialCharsOrSpacesRegex = /^[a-zA-Z0-9가-힣]+$/;\n    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n      if (\n        tags.length < 3 &&\n        tags.indexOf(e.target.value) === -1 &&\n        noSpecialCharsOrSpacesRegex.test(e.target.value)\n      ) {\n        setTags([e.target.value, ...tags]);\n        handleInputChange(null, [e.target.value, ...tags], 'tags');\n      }\n      setTimeout(() => {\n        e.target.value = '';\n      }, 0);\n    }\n  };\n  console.log(tags.length);\n  return (\n    <StyleEnterTag className=\"col\" {...rest}>\n      <div className=\"box-title\">검색 키워드</div>\n      {tags.length < 3 && (\n        <Input\n          width={width}\n          height={height}\n          placeholder={placeholder}\n          type=\"text\"\n          onKeyDown={(e) => enterTagHandler(e)}\n          maxLength={10}\n        />\n      )}\n      <div className=\"row\">\n        {tags.map((el, idx) => (\n          <StyleTag key={idx}>\n            {el}\n            <AiOutlineClose\n              size={15}\n              color={'var(--error)'}\n              onClick={() => {\n                const newTags = tags.filter((_, i) => i !== idx);\n                setTags(newTags);\n                handleInputChange(null, newTags, 'tags');\n              }}\n            />\n          </StyleTag>\n        ))}\n      </div>\n    </StyleEnterTag>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyleNewLine = styled.div`\n  line-height:1.5;\n`\n\nexport default function ReplaceNewLine(text, gap=undefined) {\n    if(gap) {\n      return (\n      <StyleNewLine>\n          {text?.split('\\n').map((item, index, array) => (\n          index === array.length - 1 ? item : (\n            <React.Fragment key={index}>\n              {item}\n              <br/>\n            </React.Fragment>\n          )\n        ))}\n      </StyleNewLine>)\n    } else {\n      return text?.split('\\n').map((item, index, array) => (\n        index === array.length - 1 ? item : (\n          <React.Fragment key={index}>\n            {item}\n            <br/>\n          </React.Fragment>\n        )\n    ));\n    }\n}\n\n","import { styled } from 'styled-components';\n\nconst StyleSelectBox = styled.div`\n  margin-bottom: 0px !important;\n`;\n\nconst P = styled.p`\n  font-size: 1.6rem;\n  margin: 1rem 0;\n  font-weight: var(--nanum-semi-bold);\n`;\n\nconst MarginBox = styled.div`\n  margin-top: ${(props) => props.$margin};\n`;\n\nexport default function SelectBox({\n  name,\n  text,\n  component,\n  margin = '0',\n  error,\n  hideError = false,\n  customText,\n  ...rest\n}) {\n  return (\n    <StyleSelectBox {...rest}>\n      <P>{text}</P>\n      {component}\n      {customText && <P>{customText}</P>}\n      {margin ? <MarginBox $margin={margin} /> : undefined}\n    </StyleSelectBox>\n  );\n}\n","import { styled } from 'styled-components';\n\nconst StyleWriteHeader = styled.div`\n  height: ${(props) => props.$height};\n  margin-bottom: ${(props) => props.$marginBottom};\n  gap: 30px;\n  color: var(--black-400);\n  .title-box {\n    flex: 1;\n    width: 100%;\n    > p {\n      font-size: 2.5rem;\n      font-weight: var(--nanum-semi-bold);\n    }\n  }\n  .body-box {\n    flex: 5;\n    width: 100%;\n    gap: 15px;\n    > p {\n      word-break: keep-all;\n      line-height: 1.3;\n      font-size: 1.6rem;\n      font-weight: var(--nanum-semi-bold);\n    }\n  }\n`;\n\nexport default function WriteDescription({\n  text,\n  height = '20rem',\n  marginBottom = '',\n  type,\n  state = 'write',\n}) {\n  const defaultWriteData = {\n    project: {\n      title: '프로젝트 모집글 작성시 주의사항',\n      body: [\n        '모집 마감일, 인원은 최초 작성 후 수정시 변경할 수 없습니다.',\n        '타이틀 이미지는 필수로 기입해야 하지만 일반 이미지는 선택사항입니다.',\n        '검색 키워드는 선택 입력 사항입니다.',\n        '이미지 파일 형식은 .jpg, .jpeg, .png 형식만 업로드 가능합니다',\n      ],\n    },\n    portfolio: {\n      title: '포트폴리오 작성시 주의사항',\n      body: [\n        '모든 댓글은 작성자가 삭제할 수 있습니다',\n        '댓글 허용 여부는 추후에도 변경이 가능합니다',\n        '타이틀 이미지는 필수 입력 사항입니다',\n        '검색 키워드는 선택 입력 사항입니다.',\n        '이미지 파일 형식은 .jpg, .jpeg, .png 형식만 업로드 가능합니다',\n      ],\n    },\n  };\n\n  const defaultEditData = {\n    project: {\n      title: '프로젝트 모집글 수정시 주의사항',\n      body: [\n        '수정을 완료하면 이후 수정 이전으로 복구할 수 없습니다.',\n        '타이틀 이미지는 필수로 기입해야 하지만 일반 이미지는 선택사항입니다.',\n        '검색 키워드는 선택 입력 사항입니다.',\n        '이미지 파일 형식은 .jpg, .jpeg, .png 형식만 업로드 가능합니다',\n      ],\n    },\n    portfolio: {\n      title: '포트폴리오 수정시 주의사항',\n      body: [\n        '수정을 완료하면 이후 수정 이전으로 복구할 수 없습니다.',\n        '타이틀 이미지는 필수로 기입해야 하지만 일반 이미지는 선택사항입니다.',\n        '검색 키워드는 선택 입력 사항입니다.',\n        '이미지 파일 형식은 .jpg, .jpeg, .png 형식만 업로드 가능합니다',\n      ],\n    },\n  };\n\n  return (\n    <StyleWriteHeader\n      className=\"write-description col\"\n      $height={height}\n      $marginBottom={marginBottom}\n    >\n      <div className=\"title-box\">\n        <p>{state !== 'edit' ? defaultWriteData[type].title : defaultEditData[type].title}</p>\n      </div>\n      <div className=\"body-box col\">\n        {state !== 'edit'\n          ? defaultWriteData[type].body.map((item, idx) => <p key={idx}>{`${idx + 1}. ${item}`}</p>)\n          : defaultEditData[type].body.map((item, idx) => <p key={idx}>{`${idx + 1}. ${item}`}</p>)}\n      </div>\n    </StyleWriteHeader>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { HiX } from 'react-icons/hi';\nimport Modal from './Modal';\n\nconst StyleFileInput = styled.div``;\n\nconst FileInputContainer = styled.div`\n  position: relative;\n  margin-top: 7px;\n  border: 1.2px solid var(--black-100);\n  border-radius: 3px;\n  height: ${(props) => props.$height};\n  width: ${(props) => props.$width};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  input {\n    display: none;\n  }\n`;\n\nconst ImgContainer = styled.div`\n  position: relative;\n  border-radius: 3px;\n  width: 100%;\n  height: 200px;\n  overflow: scroll;\n  overflow-y: hidden;\n  align-items: center;\n  justify-content: ${(props) => (props.$imgsNum === 1 ? 'center' : 'start')};\n  &::-webkit-scrollbar {\n    height: 2px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #000000; /* 스크롤바 색상 설정 */\n    border-radius: 5px; /* 스크롤바 모양 설정 */\n  }\n  &::-webkit-scrollbar-track {\n    background-color: var(--black-100) !important;\n    padding: 10px;\n  }\n`;\n\nconst ImgBox = styled.div`\n  padding: 2px;\n  position: relative;\n  height: 100%;\n  &:hover {\n    opacity: 0.3;\n  }\n  > img {\n    width: auto;\n    height: 100%;\n    object-fit: cover;\n  }\n  svg {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    opacity: 0;\n    /* color:white; */\n    :hover {\n      cursor: pointer;\n    }\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nconst TextLabel = styled.div`\n  background-color: transparent;\n  font-size: 1.6rem;\n  font-weight: var(--nanum-semi-bold);\n`;\n\nconst DragDropBox = styled.label`\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.7rem;\n  font-weight: var(--nanum-semi-bold);\n  background-color: ${(props) => (props.$isDrag ? 'var(--black-800)' : 'transparent')};\n  cursor: pointer;\n  border-radius: 3px;\n  transition: all 0.2s;\n  visibility: ${(props) => (props.$isDrag || props.$number === 0 ? 'visible' : 'hidden')};\n  &:hover {\n    background-color: var(--black-800);\n  }\n`;\n\nconst AddImageButton = styled.label`\n  position: relative;\n  border: 2px solid var(--black-100);\n  border-radius: 20px;\n  opacity: 0.8;\n  transition: all 0.2s;\n  overflow: hidden;\n  font-size: 1.4rem;\n  font-weight: var(--nanum-semi-bold);\n  left: 0;\n  bottom: -2rem;\n  padding: 5px 7px;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n\nconst MiddleLine = styled.div`\n  height: 90%;\n  margin: 0 1rem;\n  border: 1px solid var(--black-300);\n  border-radius: 1px;\n`;\n//width 퍼센테이지로 주면 스크롤 다 깨짐 씨이이발\n\n/**\n * - jpg, jpeg, png 파일 전용 미리보기 폼\n * @param {string} name - 폼의 제목. 필수입력\n * @param {string} width - 폼의 가로길이. 퍼센테이지로 입력시 비율깨질수있음\n * @param {string} height - 폼의 세로길이. 이미지는 세로길이에 맞춰서 비율이 유지됨\n * @param {string} number - 입력받을 사진파일의 개수. 필수입력\n * @param {string} dataForm - 저장할 state데이터. 필수입력필요\n * @param {string} setDatForm - state의 세터함수. 필수입력필요\n * @returns\n */\n\nexport default function FileInput({\n  name,\n  width,\n  height,\n  number,\n  handleInputChange,\n  handleErrorChange,\n  clearError,\n  dataForm,\n  defaultImgs = [],\n  setWillDeleteImgs,\n  ...rest\n}) {\n  const [imgs, setImgs] = useState([]);\n  const [isDrag, setIsDrag] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const input = useRef();\n  const fileKey = number === 1 ? 'titleImageFile' : 'imageFile';\n  const willDeleteKey = number === 1 ? 'titleImageUrl' : 'imageUrls';\n  //사용자가 드래그또는클릭으로 사진을 업로드시 미리보기 화면은 readImgToUrl을통해 img의 소스에 넣어서 보여주느것\n  //서버에 보낼때 단순 추가일경우 파일을 보냄 수정시에 이미 존재하는 이미지를 지우고싶다면 받아온 url을 보내면 될것\n  //서버에 이미지를 추가적으로 넣고싶다 그러면 파일 삭제하고싶다 그러면 url로 보냄\n  useEffect(() => {\n    if (defaultImgs.length) {\n      setImgs(defaultImgs);\n    }\n  }, [defaultImgs]);\n\n  const saveImgToFile = (files) => {\n    const formData = new FormData();\n    try {\n      for (let i = 0; i < files.length; i++) {\n        formData.append(fileKey, files[i]);\n      }\n      handleInputChange(null, formData, fileKey);\n      if (number === 1) {\n        clearError('titleImageFile');\n      }\n    } catch {\n      alert('사진 첨부실패');\n    }\n  };\n\n  //이미지를 url주소로 바꿔주는 함수 미리보기에 사용\n  const readImgToUrl = (file) => {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (e) => {\n        resolve(e.target.result);\n      };\n    });\n  };\n\n  //이미지를 url주소로 바꾸고 imgs에 넣어주는 함수\n  const fileChanger = async (file) => {\n    if (file && file.length <= number - imgs.length) {\n      const tempUrls = [];\n      for (let i = 0; i < file.length; i++) {\n        const imgUrl = await readImgToUrl(file[i]);\n        tempUrls.unshift(imgUrl);\n      }\n      setImgs([...tempUrls, ...imgs]);\n    } else {\n      setShowModal(true);\n    }\n  };\n\n  //fileChanger로 imgs에 넣고 saveImgToFile로 dataForm에 저장\n  const fileClickHandler = (e) => {\n    const selectedFile = Array.from(e.target.files);\n    fileChanger(selectedFile);\n    saveImgToFile(selectedFile);\n  };\n\n  //imgs에 클릭된 index를 조회하면서 데이터 지움\n  const deleteImgHandler = (idx) => {\n    const newImgs = imgs.filter((el, id) => id !== idx);\n    setImgs(newImgs);\n    if (setWillDeleteImgs) {\n      if (number === 1) {\n        if (dataForm.titleImage[0] === imgs[idx]) {\n          handleInputChange(null, imgs[idx], willDeleteKey);\n        }\n      } else {\n        for (let i = 0; i < dataForm.images.length; i++) {\n          if (imgs[idx] === dataForm.images[i]) {\n            const tempArr = [...dataForm.imageUrls];\n            tempArr.push(imgs[idx]);\n            handleInputChange(null, tempArr, willDeleteKey);\n            return;\n          }\n        }\n      }\n    }\n    if (input.current) {\n      input.current.value = null;\n    }\n    const tempFiles = dataForm[fileKey].getAll(fileKey);\n    const newForm = dataForm[fileKey];\n    newForm.delete(fileKey);\n    for (let i = 0; i < tempFiles.length; i++) {\n      if (i !== idx) {\n        newForm.append(fileKey, tempFiles[i]);\n      }\n    }\n    handleInputChange(null, newForm, fileKey);\n    if (number === 1) {\n      handleErrorChange(null, true, fileKey);\n    }\n  };\n\n  const dragEnterHandler = (e) => {\n    e.preventDefault();\n    setIsDrag(true);\n  };\n\n  const dragOverHandler = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n    setIsDrag(true);\n  };\n\n  const dragLeaveHandler = (e) => {\n    e.preventDefault();\n    setIsDrag(false);\n  };\n\n  const dragDropHandler = (e) => {\n    e.preventDefault();\n    setIsDrag(false);\n    const files = Array.from(e.dataTransfer.files);\n    for (let i = 0; i < files.length; i++) {\n      if (\n        files[i].type !== 'image/png' &&\n        files[i].type !== 'image/jpeg' &&\n        files[i].type !== 'image/jpg'\n      ) {\n        //파일형식이 정해진 형식이 아닌경우\n        // alert('파일형식을 맞춰주세요.');\n        setShowModal(true);\n        return;\n      }\n    }\n    saveImgToFile(files);\n    fileChanger(files);\n  };\n\n  return (\n    <StyleFileInput {...rest}>\n      {showModal && (\n        <Modal\n          setIsOpen={setShowModal}\n          title={'파일 형식 오류'}\n          body={'파일 확장자 또는 파일 개수가 맞는지 확인 해 주세요.'}\n          type=\"alert\"\n          confirmHandler={() => setShowModal(false)}\n        />\n      )}\n      <TextLabel>{`${name} ${imgs.length} / ${number}`}</TextLabel>\n      <FileInputContainer\n        $width={width}\n        $height={height}\n        onDragEnter={dragEnterHandler}\n        onDragOver={dragOverHandler}\n        onDragLeave={dragLeaveHandler}\n      >\n        <input\n          ref={input}\n          type=\"file\"\n          id={name}\n          multiple\n          accept=\".png, .jpg, .jpeg\"\n          onChange={fileClickHandler}\n        />\n        <ImgContainer className=\"row\" $imgsNum={imgs.length}>\n          {imgs.map((el, idx) => (\n            <React.Fragment key={idx}>\n              {idx !== 0 && <MiddleLine />}\n              <ImgBox>\n                <img src={el} alt=\"미리보기 사진\" />\n                <HiX onClick={() => deleteImgHandler(idx)} />\n              </ImgBox>\n            </React.Fragment>\n          ))}\n        </ImgContainer>\n        <DragDropBox\n          htmlFor={name}\n          $isDrag={isDrag}\n          $number={imgs.length}\n          onDragEnter={dragEnterHandler}\n          onDragOver={dragOverHandler}\n          onDragLeave={dragLeaveHandler}\n          onDrop={dragDropHandler}\n        >\n          이미지를 드래그 혹은 업로드 하세요\n        </DragDropBox>\n      </FileInputContainer>\n      {imgs.length !== number && <AddImageButton htmlFor={name}>사진 업로드</AddImageButton>}\n    </StyleFileInput>\n  );\n}\n","import React from 'react';\nimport { styled } from 'styled-components';\n\nconst StyleErrorInput = styled.div`\n  margin: 5px 0 5px 0;\n  div {\n    color: var(--error);\n    padding: 5px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${(props) => (props.$labelColor ? props.$labelColor : 'var(--black-100)')};\n  font-weight: var(--nanum-semi-bold);\n  font-size: 1.6rem;\n  background-color: transparent;\n`;\n\nconst StyleInput = styled.input`\n  margin-top: 7px;\n  background: none;\n  border: 1px solid;\n  font-size: ${(props) => props.$fontSize};\n  border-color: ${(props) => (props.$borderColor ? props.$borderColor : 'var(--black-100)')};\n  border-radius: ${(props) => (props.$borderRadius ? props.$borderRadius : '3px')};\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n  color: ${(props) => (props.$color ? props.$color : 'var(--black-100)')};\n  padding: 13px;\n  font-size: ${(props) => (props.$fontSize ? props.$fontSize : '1.5rem')};\n`;\n\nconst StyleError = styled.div`\n  width: fit-content;\n  font-size: 1.5rem;\n  height: 1rem;\n  opacity: ${(props) => (props.error === '' ? 0 : 1)};\n`;\n\nconst StyleTextArea = styled.textarea`\n  margin-top: 7px;\n  background: none;\n  border: 1px solid;\n  border-color: ${(props) => (props.$borderColor ? props.$borderColor : 'var(--black-100)')};\n  border-radius: ${(props) => (props.$borderRadius ? props.$borderRadius : '3px')};\n  font-size: ${(props) => props.$fontSize};\n  width: ${(props) => props.$width};\n  min-height: ${(props) => props.$height};\n  color: ${(props) => (props.$color ? props.$color : 'var(--black-100)')};\n  padding: 8px 6px;\n  font-size: 1.5rem;\n  font-family: var(--nanum);\n  line-height: 1.3;\n`;\n\n/**\n * 공용 인풋 폼 입니다.\n * 사용시 필요한 정보와 나머지 옵션은 ...rest 스프레드 문법을 통해 전달됩니다.\n * @param {string} label - 라벨 텍스트 입니다.\n * @param {string} error - 에러시 띄우고싶은 메세지입니다.\n * @param {string} width - 인풋의 너비입니다.\n * @param {string} height - 인풋의 높이입니다.\n * @param {string} fontSize - 인풋의 폰트 사이즈입니다.\n * @param {string} color - 인풋의 컬러입니다. 기본 값 --black-100\n * @param {string} labelColor - 라벨 텍스트의 컬러입니다. 기본 값 --black-100\n * @param {string} borderColor -  인풋의 border 색상입니다. 기본 값 --black-100\n * @param {function} onChangeHandler -  인풋의 onChange이벤트에 넘어오는 함수입니다.\n * @param {string} type -  text,textarea 둘 중 하나로 넘기면 text또는 textarea를 만들어줍니다.\n * @param {any} rest - 기타 프로퍼티들은 인풋 요소에 스프레드 문법으로 전달됩니다.\n * @returns {JSX.Element}\n */\n\nexport default function Input({\n  label,\n  error,\n  name,\n  width,\n  height,\n  color,\n  fontSize,\n  labelColor,\n  borderColor,\n  borderRadius,\n  onChangeHandler,\n  type,\n  ...rest\n}) {\n  return (\n    <StyleErrorInput className=\"col\">\n      <Label htmlFor={name} $labelColor={labelColor}>\n        {label}\n      </Label>\n      {type === 'textarea' ? (\n        <StyleTextArea\n          rows={1}\n          $width={width}\n          $height={height}\n          $color={color}\n          $fontSize={fontSize}\n          $borderColor={borderColor}\n          $borderRadius={borderRadius}\n          onChange={onChangeHandler}\n          {...rest}\n        />\n      ) : (\n        <StyleInput\n          $width={width}\n          $height={height}\n          $color={color}\n          $fontSize={fontSize}\n          $borderColor={borderColor}\n          $borderRadius={borderRadius}\n          onChange={onChangeHandler}\n          type={type}\n          {...rest}\n        />\n      )}\n      <StyleError $error={error}>{error}</StyleError>\n    </StyleErrorInput>\n  );\n}\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { createPortal } from 'react-dom';\nimport { mobile } from '../../static/theme';\nconst StyleModal = styled.div`\n  position: fixed;\n  z-index: 15;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #0000007d;\n  .modal-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    min-width: 500px;\n    background-color: #323232;\n    border-radius: 3px;\n    ${mobile} {\n      min-width: 200px;\n      width: 95%;\n    }\n    font-weight: var(--nanum-semi-bold);\n    animation: slideIn 0.3s ease;\n    h4 {\n      padding: 22px;\n      font-size: 1.8rem;\n    }\n    p {\n      font-size: 1.6rem;\n      padding: 22px;\n      color: var(--black-200);\n      line-height: 10px;\n    }\n    .button-wrapper {\n      display: flex;\n      justify-content: end;\n      margin-top: 15px;\n      padding: 8px;\n      button {\n        border-radius: 5px;\n        padding: 8px 15px;\n        &:hover {\n          background-color: var(--black-700);\n        }\n      }\n    }\n  }\n  .children {\n    padding: 2rem;\n  }\n  @keyframes slideIn {\n    0% {\n      transform: translateY(100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n`;\n\n/**\n *\n * @param setIsOpen - setter 함수 그대로 전달\n * @param type - type=alert or confirm or children\n * @param title - 타이틀 문자열 전달 (alert,confirm)\n * @param body - 내용 문자열 전달 (alert,confirm)\n * @param children - 자식 요소 엘리먼트 렌더링 (children)\n * @param confirmHandler - 확인 버튼 클릭시 실행할 함수\n * @param absoluteConfirm - 컨펌 핸들러에서 true 반환을 해야 모달 창 닫히게 함\n * @param cancelHandler - 취소 버튼 클릭시 실행할 함수\n * @returns {JSX.Element}\n */\n\nexport default function Modal({\n  setIsOpen,\n  type = 'confirm',\n  title,\n  body,\n  confirmHandler,\n  cancelHandler,\n  children,\n  absoluteConfirm = false,\n}) {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n\n  const modalCloser = (bool) => {\n    if (type === 'confirm') setIsOpen(true);\n    setIsOpen(bool);\n  };\n\n  const confirmOnClickHandler = () => {\n    if (absoluteConfirm) {\n      if (confirmHandler()) modalCloser(false);\n    } else {\n      if (confirmHandler) confirmHandler();\n      modalCloser(false);\n    }\n  };\n  const cancelOnClickHandler = () => {\n    if (cancelHandler) cancelHandler();\n    modalCloser(false);\n  };\n\n  return createPortal(\n    <StyleModal onClick={modalCloser}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        {children ? (\n          <div className=\"children\">{children}</div>\n        ) : (\n          <>\n            <h4>{title}</h4>\n            <p>{body}</p>\n          </>\n        )}\n        <div className=\"button-wrapper\">\n          <button onClick={confirmOnClickHandler}>확인</button>\n          {type === 'confirm' && <button onClick={cancelOnClickHandler}>취소</button>}\n        </div>\n      </div>\n    </StyleModal>,\n    document.getElementById('modal'),\n  );\n}\n","import React from 'react';\nimport { styled } from 'styled-components';\n\nconst StyleProGress = styled.div`\n  position: absolute;\n  right: 0rem;\n  font-size: ${(props) => props.$fontSize};\n  top: ${(props) => props.$top};\n  font-weight: var(--nanum-bold);\n`;\n\n/**\n *\n * @param {string} width - ProGress컴포넌트가 차지할 너비\n * @param {string} height - ProGress컴포넌트가 차지할 높이\n * @param {string} fontSize - 표시될 글자의 크기 기본값 16px\n * @param {string} top - 표시될 글자와 프로그레스바의 갭 기본값 -1.4rem\n * @param {number} comPleteNum - 프로그레스 최고단계 수\n * @param {number} proGressNum - 프로그레스 진행 수\n * @param {any} error - 프로그레스 진행단계와 상관없이 에러표시하고싶을때\n * @returns\n */\n\nexport default function ProGress({\n  width,\n  height,\n  fontSize = '20px',\n  top = '',\n  comPleteNum,\n  proGressNum,\n  error,\n  ...rest\n}) {\n  return (\n    <StyleProGress\n      $width={width}\n      $height={height}\n      $fontSize={fontSize}\n      $top={top}\n      className=\"progress-bar\"\n      {...rest}\n    >\n      {`${proGressNum} / ${comPleteNum}`}\n    </StyleProGress>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { IoIosArrowDown } from 'react-icons/io';\nconst Container = styled.div`\n  width: ${(props) => props.$width || '300px'};\n  font-size: ${(props) => (props.$fontSize ? props.$fontSize : '1.5rem')};\n  gap: 10px;\n  position: relative;\n  font-weight: bold;\n`;\n\nconst StyleSelect = styled.div`\n  width: 100%;\n  height: ${(props) => props.$height || '3rem'};\n  position: absolute;\n  display: flex;\n  align-items: center;\n  transition: 0.2s;\n  opacity: ${(props) => (props.$isOn ? '1' : '0.7')};\n  border: 1px solid;\n  border-radius: 5px;\n  cursor: pointer;\n  .arrow-icon {\n    position: absolute;\n    right: 10px;\n    transform: ${(props) => (props.$isOn ? 'rotate(180deg)' : '')};\n    transition: all 0.4s;\n  }\n`;\n\nconst StyleValue = styled.div`\n  position: absolute;\n  left: 10px;\n`;\n\nconst StyleDropMenu = styled.div`\n  position: absolute;\n  top: ${(props) => (props.$height ? `calc(${props.$height} + 5px)` : '35px')};\n  width: 100%;\n  border: 1px solid var(--black-100);\n  border-radius: 5px;\n  overflow: auto;\n  opacity: ${(props) => (props.$isOn ? '1' : '0')};\n  max-height: ${(props) => (props.$isOn ? '120px' : '0')};\n  transition: all 0.3s;\n  backdrop-filter: blur(10px);\n  z-index: 10;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  /* 스크롤바 전체 영역 */\n  &::-webkit-scrollbar-track {\n    background: var(--backgroundColor) !important;\n    border-radius: 6px;\n  }\n`;\n\nconst StyleDropMenuItem = styled.div`\n  width: 100%;\n  padding: 1rem;\n  transition: all 0.3s;\n  background-color: var(--backgroundColor);\n  cursor: pointer;\n  &:hover {\n    background-color: #7d6a6a;\n  }\n`;\n\n/**\n * 공용 드롭다운\n * * @description\n * - const handleClickItem = (item) => {\n    setCurItem(item);\n  };\n * - props width=\"30\" options={options} itemValue={curItem} onClickHandler={handleClickItem}\n * @param {string} width - 드롭다운 가로 길이\n * @param {string} height - 드롭다운 세로 길이\n * @param {object[]} options - 옵션으로 들어올 객체 배열 {defaultLabel:'옵션'}\n * @param {string} itemValue - 현재 표시할 요소 값 참조\n * @param {function} defaultLabel - 기본 라벨입니다\n * @param {string} fontSize - 전체 폰트 사이즈\n * @param {function} onClickHandler - 함수 전달시 매개변수가 전달됨 해당 매개변수를 세터 값을 변경하는 함수로 만들고 넣으세요\n * @returns {JSX.Element}\n */\nexport default function Select({ width, options, defaultLabel, onClickHandler, fontSize, height }) {\n  const [isOn, setIsOn] = useState(false);\n  const [selectedLabel, setSelectedLabel] = useState(defaultLabel);\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsOn((prev) => !prev);\n  };\n\n  const handleDropDownCloser = () => {\n    setIsOn(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleDropDownCloser);\n    return () => window.removeEventListener('click', handleDropDownCloser);\n  }, []);\n\n  useEffect(() => {\n    setSelectedLabel(defaultLabel);\n  }, [defaultLabel]);\n\n  return (\n    <Container className=\"select-container col\" $width={width} $fontSize={fontSize}>\n      <StyleSelect className=\"select\" $height={height} $isOn={isOn} onClick={handleClick}>\n        <StyleValue>{selectedLabel}</StyleValue>\n        <IoIosArrowDown className=\"arrow-icon\" size={20} />\n      </StyleSelect>\n      <StyleDropMenu $height={height} className=\"col\" $isOn={isOn}>\n        {options.map((el, i) => (\n          <StyleDropMenuItem\n            key={i}\n            onClick={() => {\n              onClickHandler(el.value);\n              setSelectedLabel(el.label);\n            }}\n            $isOn={isOn}\n          >\n            {el.label}\n          </StyleDropMenuItem>\n        ))}\n      </StyleDropMenu>\n    </Container>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useError(defaultError,rule) {\n    const [error, setError] = useState(defaultError);\n\n    const updateError = (value,name,callback) => {\n        if (callback) {\n            const updatedError = callback(error, rule, value, name);\n            setError(updatedError);\n        } else {\n            setError((prevError) => ({\n                ...prevError,\n                [name]: value,\n            }));\n        }\n    }\n\n    const handleErrorChange = (e, value, name, errorChangeFunction) => {\n        if(e) {\n            const { value, name } = e.target;\n            updateError(value,name, errorChangeFunction);\n        } else {\n            updateError(value,name, errorChangeFunction);\n        }\n    };\n\n    const removeSpecificError = (name) => {\n        const newError = {...error};\n        delete newError[name];\n        setError(newError);\n    }\n\n    return [error, handleErrorChange, removeSpecificError, setError];\n}\n","import api from '../hooks/useAxiosInterceptor';\nimport { projectWriteInitData } from '../static/projectInit';\nimport { portfolioWriteInitData } from '../static/portfolioInit';\n\nconst formDataHeader = {\n    'Content-Type': 'multipart/form-data',\n    withCredentials: true,\n}\n\nconst transferToFormData = (obj, type, memberId, postId) => {\n    const formData = new FormData();\n    const jsonData = {};\n    const standardInitData = type === 'project' ? projectWriteInitData : portfolioWriteInitData;\n    for (const key in standardInitData) {\n        const value = obj[key];\n        if (value instanceof FormData) {\n            for (const subValue of value.values()) {\n                formData.append(key, subValue);\n            }\n        } else if (key === 'titleImageUrl'){\n            if(obj[key].length !== 0) {\n                formData.append(key, obj[key]);\n            }\n        } else if (key === 'imageUrls') {\n            if(obj[key].length !== 0 ) {\n                for(let i = 0; i < obj[key].length; i++){\n                    formData.append(key, obj[key][i]);    \n                }\n            }\n        } else {\n            jsonData[key] = value;\n        }\n    }\n    if(!postId) {\n        jsonData.memberId = memberId\n    }\n    let tempStr = '';\n    if(obj.tags.length) {\n        for(let i = 0; i < obj.tags.length; i++ ){\n            tempStr+=obj.tags[i];\n            if(i !== obj.tags.length-1) {\n                tempStr+=',';\n            }\n        }\n        jsonData.tags = tempStr;\n    } else {\n        jsonData.tags = \"\";\n    }\n    \n    formData.append(type, JSON.stringify(jsonData));\n    return formData;\n}\n\nexport const writeSubmitHandler = (obj, error, setError, type, memberId, postId) => {\n    return new Promise((resolve,reject)=>{\n        if(Object.keys(error).length) {\n            const newError = {...error}\n            for(let key in error) {\n                newError[key] = true;\n            }\n            setError(newError);\n            window.scrollTo(0,0);\n            return reject('formError')\n        } else {\n            const requestForm = transferToFormData(obj, type, memberId, postId);\n            // for(const [subKey,value] of requestForm.entries()) {\n            //     console.log(subKey, value);\n            // }\n            if(postId) {\n                api.patch(`/${type}s/${postId}`,requestForm, {\n                    headers:formDataHeader,\n                })\n                .then(res=>{\n                    return resolve();\n                })\n                .catch((error) => {\n                    if (error.response) {\n                      console.log('서버 응답 오류:', error.response.status, error.response.data);\n                    } else if (error.request) {\n                      console.log('요청 오류:', error.request);\n                    } else {\n                      console.log('일반 오류:', error.message);\n                    }\n                    return reject();\n                });\n            } else {\n                api.post(`/${type}s`,requestForm, {\n                    headers:formDataHeader,\n                })\n                .then((res)=>{\n                    return resolve();\n                })\n                .catch((error) => {\n                    if (error.response) {\n                      console.log('서버 응답 오류:', error.response.status, error.response.data);\n                    } else if (error.request) {\n                      console.log('요청 오류:', error.request);\n                    } else {\n                      console.log('일반 오류:', error.message);\n                    }\n                    return reject();\n                  });\n            }\n        }\n    })\n}","import React, { useState } from 'react';\nimport { writeSubmitHandler } from '../utils/writeSubmitHandler';\nimport { returnErrorMsg } from '../utils/returnErrorMsg';\nimport ReplaceNewLine from '../components/PfPjPublic/ReplaceNewLine';\n\nexport default function useSubmitWriteEdit() {\n    const [apiResult, setApiResult] = useState('전송 중');\n    const [isSuccess, setIsSuccess] = useState(false);\n\n    const submitHandler = (dataForm, errors, setErrors, type, memberId, postId) => {\n        writeSubmitHandler(dataForm,errors,setErrors,type, memberId, postId)\n        .then(()=>{\n            setApiResult(`${postId ? '수정' : '작성'} 완료. 확인 버튼 클릭시 이전 페이지로 돌아갑니다.`)\n            setIsSuccess(true);\n        })\n        .catch((err)=>{\n            setApiResult(err==='formError' ? ReplaceNewLine(returnErrorMsg(errors, type),true) : '서버와의 통신에 실패했습니다. 다시 시도해 주세요.');\n            setIsSuccess(false);\n        })\n    }\n\n    return [apiResult, isSuccess, submitHandler, setApiResult];\n}\n\n","export function returnErrorMsg (err,type) {\n    let errMsg = '';\n    for(let key in err) {\n        if(key === 'title') {\n            errMsg+='제목은 최소 10글자 이상 입력해야 합니다.\\n';\n        } else if (key === 'lang') {\n            errMsg+='언어 선택은 필수 입니다.\\n';\n        } else if (key === 'totalPeople') {\n            errMsg+='프로젝트 모집 인원 선택은 필수 입니다.\\n';\n        } else if (key === 'body') {\n            if(type === 'project') {\n                errMsg+='프로젝트 설명은 최소 100글자 이상 입력해야 합니다.\\n';\n            } else if (type === 'portfolio') {\n                errMsg+='포트폴리오 설명은 최소 500글자 이상 입력해야 합니다.\\n';\n            }\n        } else if (key === 'closedAt') {\n            errMsg+='프로젝트 마감 날짜 선택은 필수 입니다.\\n';\n        } else if (key === 'titleImageFile') {\n            errMsg+='타이틀 이미지 선택은 필수 입니다.\\n';\n        }\n    }\n    return errMsg;\n}","const languages = [\n  'JavaScript',\n  'Python',\n  'Java',\n  'C',\n  'Ruby',\n  'PHP',\n  'Swift',\n  'Kotlin',\n  'TypeScript',\n  'Go',\n  'Rust',\n  'Dart',\n];\n\nexport default languages;\n","//포트폴리오 작성시 기본 데이터\nexport const portfolioWriteInitData = {\n    title:'',\n    lang : '',\n    isComment : 0,\n    isEmploy : 0, \n    tags : [],\n    body : '',\n    titleImageFile : new FormData(),\n    titleImageUrl : '',\n    imageFile : new FormData(),\n    imageUrls : '',\n}\n\n\n//포트폴리오 작성시에 기본적으로 존재하는 룰\nexport const portfolioErrorInitData = {\n    title : false,\n    body : false,\n    lang : false,\n    titleImageFile: false,\n}\n\n//프로트폴리오 작성시 룰\nexport const portfolioWriteRule = {\n    title : {\n      min : 10,\n      max : 30,\n    },\n    lang : {\n      min : 1,\n      max : 1,\n    },\n    body : {\n      min : 200,\n      max : 1000,\n    },\n}","//프로젝트 작성시 기본 데이터들\nexport const projectWriteInitData = {\n    title:'',\n    lang : '',\n    totalPeople : '',\n    closedAt : String(new Date(new Date().setDate(new Date().getDate() + 7))),\n    tags : [],\n    body : '',\n    description : '',\n    titleImageFile : new FormData(),\n    titleImageUrl : '',\n    imageFile : new FormData(),\n    imageUrls : [],\n}\n\n//기본적으로 존재하는 프로젝트 에러들\nexport const projectErrorInitData = {\n    title : false,\n    body : false,\n    lang : false,\n    totalPeople : false,\n    titleImageFile: false,\n}\n\n//프로젝트 작성시 룰\nexport const projectWriteRule = {\n    title : {\n        min : 10,\n        max : 30,\n      },\n      lang : {\n        min : 1,\n        max : 1,\n      },\n      totalPeople : {\n        min : 1,\n        max : 1,\n      },\n      closedAt : {\n        min : 1,\n        max : 1,\n      },\n      body : {\n        min : 100,\n        max : 500,\n      },\n      description : {\n        min : 0,\n        max : 200,\n      }\n}","export const checkValidations = (errors, rule, value, fieldName) => {\n    if (rule[fieldName]) {\n        if(rule[fieldName].min === rule[fieldName].max) {\n            if (value.length < rule[fieldName].min) {\n                return {...errors, [fieldName]: true }\n                } else {\n                const newErrors = {...errors};\n                delete newErrors[fieldName];\n                return newErrors;\n            }\n        } else {\n            if (value.length > rule[fieldName].max || value.length < rule[fieldName].min) {\n                return {...errors, [fieldName]: true }\n                } else {\n                const newErrors = {...errors};\n                delete newErrors[fieldName];\n                return newErrors;\n            }\n        }\n    }\n}\n"],"names":["StyleEnterTag","styled","div","_templateObject","_taggedTemplateLiteral","StyleTag","_templateObject2","props","$padding","EnterTag","_ref","width","height","placeholder","_ref$defaultTags","defaultTags","handleInputChange","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","tags","setTags","useEffect","length","console","log","_jsxs","_objectSpread","className","children","_jsx","Input","type","onKeyDown","e","code","indexOf","target","value","test","concat","_toConsumableArray","setTimeout","enterTagHandler","maxLength","map","el","idx","AiOutlineClose","size","color","onClick","newTags","filter","_","i","StyleNewLine","ReplaceNewLine","text","arguments","undefined","split","item","index","array","React","StyleSelectBox","P","p","MarginBox","_templateObject3","$margin","SelectBox","name","component","_ref$margin","margin","customText","error","hideError","StyleWriteHeader","$height","$marginBottom","WriteDescription","_ref$height","_ref$marginBottom","marginBottom","_ref$state","state","defaultWriteData","project","title","body","portfolio","defaultEditData","StyleFileInput","FileInputContainer","$width","ImgContainer","$imgsNum","ImgBox","_templateObject4","TextLabel","_templateObject5","DragDropBox","label","_templateObject6","$isDrag","$number","AddImageButton","_templateObject7","MiddleLine","_templateObject8","FileInput","_ref2","number","handleErrorChange","clearError","dataForm","_ref$defaultImgs","defaultImgs","setWillDeleteImgs","imgs","setImgs","_useState3","_useState4","isDrag","setIsDrag","_useState5","_useState6","showModal","setShowModal","input","useRef","fileKey","willDeleteKey","saveImgToFile","files","formData","FormData","append","_unused","alert","readImgToUrl","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","fileChanger","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tempUrls","imgUrl","wrap","_context","prev","next","sent","unshift","stop","apply","dragEnterHandler","preventDefault","dragOverHandler","dataTransfer","dropEffect","dragLeaveHandler","Modal","setIsOpen","confirmHandler","onDragEnter","onDragOver","onDragLeave","ref","id","multiple","accept","onChange","selectedFile","Array","from","src","alt","HiX","newImgs","titleImage","images","tempArr","imageUrls","push","current","tempFiles","getAll","newForm","delete","deleteImgHandler","htmlFor","onDrop","StyleErrorInput","Label","$labelColor","StyleInput","$fontSize","$borderColor","$borderRadius","$color","StyleError","StyleTextArea","textarea","fontSize","labelColor","borderColor","borderRadius","onChangeHandler","rows","$error","StyleModal","mobile","_ref$type","cancelHandler","_ref$absoluteConfirm","absoluteConfirm","document","style","overflow","modalCloser","bool","createPortal","stopPropagation","_Fragment","getElementById","StyleProGress","$top","ProGress","_ref$fontSize","_ref$top","top","comPleteNum","proGressNum","Container","StyleSelect","$isOn","StyleValue","StyleDropMenu","StyleDropMenuItem","Select","options","defaultLabel","onClickHandler","isOn","setIsOn","selectedLabel","setSelectedLabel","handleDropDownCloser","window","addEventListener","removeEventListener","IoIosArrowDown","useError","defaultError","rule","setError","updateError","callback","updatedError","prevError","_defineProperty","errorChangeFunction","_e$target","newError","formDataHeader","withCredentials","writeSubmitHandler","obj","memberId","postId","reject","Object","keys","key","scrollTo","requestForm","jsonData","standardInitData","projectWriteInitData","portfolioWriteInitData","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","subValue","err","f","tempStr","JSON","stringify","transferToFormData","api","patch","headers","then","res","catch","response","status","data","request","message","post","useSubmitWriteEdit","apiResult","setApiResult","isSuccess","setIsSuccess","errors","setErrors","errMsg","returnErrorMsg","lang","isComment","isEmploy","titleImageFile","titleImageUrl","imageFile","portfolioErrorInitData","portfolioWriteRule","min","max","totalPeople","closedAt","String","Date","setDate","getDate","description","projectErrorInitData","projectWriteRule","checkValidations","fieldName","newErrors"],"sourceRoot":""}