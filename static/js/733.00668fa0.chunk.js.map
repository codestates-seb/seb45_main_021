{"version":3,"file":"static/js/733.00668fa0.chunk.js","mappings":"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","sources":["components/common/PortfolioWriteCommon.jsx","components/project/DateSelect.jsx","pages/ProjectWrite.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { desktop } from '../../static/theme';\nconst StylePortfolioWrite = styled.section`\n  width: var(--inner);\n  margin: var(--center);\n  padding-top: 50px;\n  .write-wrapper {\n    display: flex;\n    .input-container {\n      gap: 15px;\n      width: 1%;\n      flex: 1;\n    }\n    gap: 100px;\n    ${desktop} {\n      flex-direction: column;\n      .input-container {\n        width: 100%;\n        flex: 1;\n      }\n    }\n  }\n  .write-description {\n    position: sticky;\n    top: 50px;\n    order: 1;\n    ${desktop} {\n      position: static;\n      order: 0;\n    }\n  }\n  input {\n    border: none;\n    border-bottom: 1px solid var(--black-600);\n    padding-top: 10px;\n    padding-left: 3px;\n    border-radius: 0;\n    transition: all.1s;\n    font-weight: var(--nanum-semi-bold);\n    font-size: 1.6rem;\n    &:focus {\n      border-color: var(--black-100);\n    }\n  }\n  .progress-input {\n    position: relative;\n    .progress-bar {\n      position: absolute;\n      bottom: 25px;\n    }\n  }\n  .selectors {\n    position: relative;\n    display: flex;\n    gap: 30px;\n    .lang-selector {\n      flex: 1;\n    }\n  }\n  .tag-container {\n    margin-top: 30px;\n    input {\n      margin-bottom: -10px;\n    }\n  }\n  .body-content {\n    border: 1px solid var(--black-500);\n    transition: all.1s;\n    font-weight: var(--nanum-bold);\n    font-size: 1.6rem;\n    &:focus {\n      border-color: var(--black-100);\n    }\n  }\n  .progress-textarea {\n    position: relative;\n    .progress-bar {\n      position: absolute;\n      top: 10px;\n    }\n  }\n\n  .body-image {\n    margin-top: 40px;\n  }\n  .button-box {\n    margin-top: 60px;\n    display: flex;\n    gap: 20px;\n    button {\n      width: 70px;\n    }\n  }\n`;\nexport default StylePortfolioWrite;\n","import { useEffect, useState } from \"react\";\nimport Select from \"../common/Select\";\nimport { checkValidations } from \"../../utils/checkValidations\";\n\nexport default function DateSelect ({\n    defaultDate,\n    width,\n    handleInputChange,\n    handleErrorChange\n}) {\n    const time = new Date()\n    const [resetDate, setResetDate] = useState([]);\n\n    useEffect(()=>{\n        if(defaultDate?.length) {\n            const parsingDate = new Date(defaultDate);\n            setResetDate([\n                parsingDate.getFullYear(),\n                parsingDate.getMonth()+1,\n                parsingDate.getDate(),\n            ])\n        }\n    },[defaultDate]);\n    \n    const yearOptions = () => {\n        const options = []\n        for(let i = time.getFullYear(); i <= time.getFullYear()+10; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const monthOptions = () => {\n        const options = []\n        for(let i = (time.getFullYear()===resetDate[0] ? time.getMonth()+1 : 1); i <= 12; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const dayOptions = () => {\n        const options = []\n        const lastDays = new Date(resetDate[0], resetDate[1], 0).getDate();\n        for(let i = (time.getFullYear()===resetDate[0] && time.getMonth()+1===resetDate[1]) ? time.getDate()+1 : 1; i <= lastDays; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    \n    const setOptions = [yearOptions(), monthOptions(), dayOptions()]\n\n    const settingByIndex = (idx,e) => {\n        if(idx === 0) {\n            const newDate = [...resetDate];\n            newDate[0] = e;\n            newDate[1] = '-';\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 1) {\n            const newDate = [...resetDate];\n            newDate[1] = e;\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 2) {\n            const newDate = [...resetDate];\n            newDate[2] = e;\n            return newDate;\n        }\n    }\n\n    return (\n        <>\n            {resetDate.map((el,idx)=>\n                <Select\n                    key={idx}\n                    width={width}\n                    options={setOptions[idx]}\n                    defaultLabel={el}\n                    onClickHandler={(e)=>{\n                        setResetDate(settingByIndex(idx,e));\n                        if(idx === 2) {\n                            handleInputChange(null,String(new Date(resetDate[0],resetDate[1]-1,e)), 'closedAt')\n                            handleErrorChange(null,String(new Date(resetDate[0],resetDate[1],e)), 'closedAt', checkValidations)\n                        } else {\n                            handleInputChange(null,'', 'closedAt')\n                            handleErrorChange(null,'', 'closedAt', checkValidations)\n                        }\n                    }}\n                />\n            )}\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { styled } from 'styled-components';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport useForm from '../hooks/useForm';\nimport DateSelect from '../components/project/DateSelect';\nimport Page from './../components/common/Page';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteDescription from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport languages from '../static/languages';\nimport {\n  projectErrorInitData,\n  projectWriteInitData,\n  projectWriteRule,\n} from '../static/projectInit';\nimport Modal from '../components/common/Modal';\nimport { custom, desktop } from '../static/theme';\nimport { useSelector } from 'react-redux';\nimport { StyleBorderButton } from '../components/common/Buttons';\nimport useSubmitWriteEdit from '../hooks/useSubmitWriteEdit';\nimport StylePortfolioWrite from '../components/common/PortfolioWriteCommon';\n\nexport const StyleProjectWrite = styled(StylePortfolioWrite)`\n  .selectors {\n    gap: 70px;\n    margin-bottom: 5rem;\n  }\n  .data-select-container {\n    gap: 1rem;\n  }\n`;\n\nexport default function ProjectWrite() {\n  const { toProject } = useNav();\n  const [showModal, setShowModal] = useState(false);\n  const [dataForm, handleInputChange] = useForm(projectWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError(\n    projectErrorInitData,\n    projectWriteRule,\n  );\n  const [apiResult, isSuccess, submitHandler, setApiResult] = useSubmitWriteEdit();\n  const [isCancel, setIsCancel] = useState(false);\n  const loginUserData = useSelector((state) => state.user);\n\n  const width = '100%';\n  const height = '23rem';\n\n  const languagesOptions = (() => {\n    const arr = [];\n    arr.push({ value: '', label: '-' });\n    for (let i = 0; i < languages.length; i++) {\n      arr.push({ value: languages[i], label: languages[i] });\n    }\n    return arr;\n  })();\n\n  const totalPeopleOptions = [\n    { value: '', label: '-' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n    { value: '7', label: '7' },\n    { value: '8', label: '8' },\n    { value: '9', label: '9' },\n    { value: '10', label: '10' },\n  ];\n\n  return (\n    <StyleProjectWrite className=\"col\">\n      {showModal && (\n        <Modal\n          type={isCancel ? 'confirm' : 'alert'}\n          setIsOpen={setShowModal}\n          title={'알림'}\n          body={apiResult}\n          confirmHandler={() => (isSuccess || isCancel ? toProject() : setShowModal(false))}\n        />\n      )}\n      <div className=\"write-wrapper\">\n        <WriteDescription type=\"project\" />\n        <div className=\"input-container col\">\n          <div className=\"progress-input\">\n            <Input\n              label={'프로젝트 제목'}\n              width={'100%'}\n              onChange={(e) => {\n                handleInputChange(null, e.target.value, 'title');\n                handleErrorChange(null, e.target.value, 'title', checkValidations);\n              }}\n              placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n              type=\"text\"\n              maxLength={30}\n            />\n\n            <ProGress\n              width={'100%'}\n              fontSize={'1.3rem'}\n              comPleteNum={projectWriteRule.title.max}\n              proGressNum={dataForm.title.length ?? 0}\n              error={dataForm.title.length < 10 ? true : false}\n            />\n          </div>\n          <div className=\"selectors col\">\n            <SelectBox\n              className=\"lang-selector\"\n              text={'언어 선택'}\n              component={\n                <Select\n                  height=\"37px\"\n                  width={width}\n                  options={languagesOptions}\n                  defaultLabel={'-'}\n                  onClickHandler={(e) => {\n                    handleInputChange(null, e, 'lang');\n                    handleErrorChange(null, e, 'lang', checkValidations);\n                  }}\n                />\n              }\n            />\n\n            <SelectBox\n              text={'모집할 인원을 선택해주세요.'}\n              component={\n                <Select\n                  width={width}\n                  options={totalPeopleOptions}\n                  defaultLabel={'-'}\n                  onClickHandler={(e) => {\n                    handleInputChange(null, e, 'totalPeople');\n                    handleErrorChange(null, e, 'totalPeople', checkValidations);\n                  }}\n                />\n              }\n              error={errors.totalPeople}\n              name=\"모집 인원\"\n            />\n\n            <SelectBox\n              text={'프로젝트 마감 날짜를 선택 해 주세요. (모집 시작은 작성일 기준입니다.)'}\n              component={\n                <div className=\"data-select-container row\">\n                  <DateSelect\n                    defaultDate={dataForm.closedAt}\n                    width={width}\n                    handleInputChange={handleInputChange}\n                    handleErrorChange={handleErrorChange}\n                  />\n                </div>\n              }\n              error={errors.closedAt}\n              name=\"마감 날짜\"\n            />\n          </div>\n          <EnterTag\n            className=\"tag-container\"\n            width=\"100%\"\n            height=\"3.5rem\"\n            placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n          />\n          <div className=\"progress-textarea\">\n            <Input\n              className=\"body-content\"\n              label={'프로젝트 본문'}\n              width={width}\n              height={height}\n              type={'textarea'}\n              onChange={(e) => {\n                handleInputChange(null, e.target.value, 'body');\n                handleErrorChange(null, e.target.value, 'body', checkValidations);\n              }}\n              placeholder={'100 - 500 글자를 입력해주세요'}\n              maxLength={500}\n            />\n            <ProGress\n              width={'100%'}\n              height={'1.2rem'}\n              fontSize={'1.2rem'}\n              comPleteNum={projectWriteRule.body.max}\n              proGressNum={dataForm.body.length ?? 0}\n              error={dataForm.body.length < 100 ? true : false}\n            />\n          </div>\n          <div className=\"progress-textarea\">\n            <Input\n              className=\"body-content\"\n              label={'상세 요강'}\n              width={width}\n              height={height}\n              type={'textarea'}\n              onChange={(e) => {\n                handleInputChange(null, e.target.value, 'description');\n                handleErrorChange(null, e.target.value, 'description', checkValidations);\n              }}\n              placeholder={'최대 200글자까지 입력 가능합니다'}\n              maxLength={200}\n            />\n            <ProGress\n              width={'100%'}\n              height={'1.2rem'}\n              fontSize={'1.2rem'}\n              comPleteNum={projectWriteRule.description.max}\n              proGressNum={dataForm.description.length ?? 0}\n              error={dataForm.description.length > 200 ? true : false}\n            />\n          </div>\n          <FileInput\n            className=\"title-image\"\n            name={'타이틀 이미지'}\n            width={'100%'}\n            height={'200px'}\n            number={1}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            handleErrorChange={handleErrorChange}\n            clearError={clearError}\n          />\n\n          <FileInput\n            className=\"body-image\"\n            name={'이미지'}\n            width={'100%'}\n            height={'200px'}\n            number={7}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n      <div className=\"button-box\">\n        <StyleBorderButton\n          onClick={() => {\n            setShowModal(true);\n            submitHandler(dataForm, errors, setErrors, 'project', loginUserData.userInfo.memberId);\n          }}\n        >\n          작성\n        </StyleBorderButton>\n        <StyleBorderButton\n          onClick={() => {\n            setShowModal(true);\n            setIsCancel(true);\n            setApiResult('작성 취소시 작성한 내용은 저장되지 않습니다.');\n          }}\n        >\n          취소\n        </StyleBorderButton>\n      </div>\n    </StyleProjectWrite>\n  );\n}\n"],"names":["StylePortfolioWrite","styled","section","_templateObject","_taggedTemplateLiteral","desktop","DateSelect","_ref","defaultDate","width","handleInputChange","handleErrorChange","time","Date","_useState","useState","_useState2","_slicedToArray","resetDate","setResetDate","useEffect","length","parsingDate","getFullYear","getMonth","getDate","setOptions","options","i","push","value","label","yearOptions","monthOptions","lastDays","dayOptions","_jsx","_Fragment","children","map","el","idx","Select","defaultLabel","onClickHandler","e","newDate","_toConsumableArray","settingByIndex","String","checkValidations","StyleProjectWrite","ProjectWrite","_dataForm$title$lengt","_dataForm$body$length","_dataForm$description","toProject","useNav","showModal","setShowModal","_useForm","useForm","projectWriteInitData","_useForm2","dataForm","_useError","useError","projectErrorInitData","projectWriteRule","_useError2","errors","clearError","setErrors","_useSubmitWriteEdit","useSubmitWriteEdit","_useSubmitWriteEdit2","apiResult","isSuccess","submitHandler","setApiResult","_useState3","_useState4","isCancel","setIsCancel","loginUserData","useSelector","state","user","height","languagesOptions","arr","languages","_jsxs","className","Modal","type","setIsOpen","title","body","confirmHandler","WriteDescription","Input","onChange","target","placeholder","maxLength","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","totalPeople","name","closedAt","EnterTag","description","FileInput","number","StyleBorderButton","onClick","userInfo","memberId"],"sourceRoot":""}