{"version":3,"file":"static/js/419.2933c472.chunk.js","mappings":"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","sources":["components/common/ToggleButton.jsx","pages/PortfolioWrite.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyleToggleContainer = styled.div`\n  position: relative;\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n  cursor: pointer;\n  border-radius: 50px;\n  transition: 0.3s;\n  border: 1px solid white;\n  &.toggle--checked {\n    background-color: var(--black-800);\n  }\n\n  .toggle-circle {\n    cursor: pointer;\n    transition: all 0.3s;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    left: 2px;\n    width: ${(props) => `calc(${props.$height} - 8px)`};\n    height: ${(props) => `calc(${props.$height} - 8px)`};\n    border-radius: 50%;\n    background-color: var(--black-100);\n  }\n  .toggle--checked {\n    left: ${(props) => `calc(${props.$width} - ${props.$height} + 3px)`};\n  }\n`;\n\n/**\n *\n * @param {string} width 전체너비\n * @param {string} height 전체높이\n * @param {string} beforeBackColor 활성화 전 컬러\n * @param {string} afterBackColor 활성화 후 컬러\n * @param {string} circleColor 동그라미 컬러\n * @param {boolean} defaultValue 초기 상태 값\n * @param {function} onClickHandler 버튼 클릭시 작동되는 핸들러\n * @param {any} rest 나머지\n * @returns\n */\n\nexport default function ToggleButton({\n  width = '70px',\n  height = '35px',\n  defaultValue = false,\n  onClickHandler,\n  rest,\n}) {\n  const [isOn, setIsOn] = useState(defaultValue);\n  const handleToggleClick = () => {\n    setIsOn(!isOn);\n    onClickHandler && onClickHandler(!isOn);\n  };\n  \n  useEffect(()=>{\n    if(defaultValue !== undefined) {\n        setIsOn(defaultValue);\n    }\n  },[defaultValue])\n\n  return (\n    <>\n      <StyleToggleContainer\n        $width={width}\n        $height={height}\n        {...rest}\n        className={`toggle-container ${isOn && 'toggle--checked'}`}\n        onClick={handleToggleClick}\n      >\n        <div className={`toggle-circle ${isOn && 'toggle--checked'}`} />\n      </StyleToggleContainer>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { styled } from 'styled-components';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport  useForm  from '../hooks/useForm';\nimport Page from './../components/common/Page';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteHeader from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport ToggleButton from '../components/common/ToggleButton';\nimport languages from '../static/languages';\nimport { portfolioErrorInitData, portfolioWriteInitData, portfolioWriteRule } from '../static/portfolioInit';\nimport SubmitModalBox from '../components/PfPjPublic/SubmitModalBox';\nimport { writeSubmitHandler } from '../utils/writeSubmitHandler';\nimport Modal from '../components/common/Modal';\nimport { useSelector } from 'react-redux';\n\nconst StyleProjectWrite = styled(Page)`\n  height:auto;\n  background-color: transparent;\n  padding-top:6rem;\n  font-size:1.6rem;\n\n  .write-wrapper {\n    gap:3rem;\n  }\n  .margin-top-remove {\n    margin-top:-20px !important;\n  }\n  .input-container {\n    width:40%;\n    height:100%;\n    > div {\n      margin-bottom:3rem;\n    }\n  }\n  .imgs-container {\n    width:60%;\n    height:auto;\n    > div {\n      margin-bottom:6rem;\n    }\n  }\n  .submit-box {\n    width:100%;\n    margin-bottom:10rem;\n    display:flex;\n    button {\n      font-size:1.6rem;\n      padding:5px 15px;\n      margin-right:5rem;\n    }\n  }\n  .data-select-container {\n    gap:1rem;\n    div {\n      flex:1;\n    }\n  }\n  .error {\n    color:var(--error);\n    margin-top:1rem;\n  }\n  @media screen and (max-width:900px){\n    .write-wrapper{\n      flex-direction: column;\n    }\n    .input-container {\n      width:100%;\n    }\n    .imgs-container {\n      width:100%;\n    }\n  }\n`\n\nexport default function PortfolioWrite() {\n  const {toPortfolio} = useNav();\n  const [dataForm,handleInputChange] = useForm(portfolioWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors ] = useError(portfolioErrorInitData , portfolioWriteRule);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, setApiResult] = useState(false);\n  //false면 프론트측 에러 true면 백측에러\n  const [whichError, setWhichError] = useState(false);\n  const [isLoading ,setIsLoading] = useState(false);\n  const loginUserData = useSelector(state=>state.user);\n\n  const width = '100%';\n  const height = '70rem';\n\n  //테스트용 언어 옵션들\n  const languagesOptions = (() => {\n    const arr = [];\n    arr.push({value : '', label : '-'});\n    for(let i = 0; i < languages.length; i++) {\n      arr.push({value: languages[i], label : languages[i]});\n    }\n    return arr;\n  })()\n\n  return (\n    <StyleProjectWrite className='col'>\n      {showModal && <Modal\n        type={'alert'}\n        setIsOpen={setShowModal}\n        title={isLoading ? '' : apiResult ? '작성 완료' : `${whichError ? '통신 에러' : '입력 형식 오류'}`}\n        body={isLoading ? '' : apiResult ? '확인 버튼 클릭시 포트폴리오 리스트 화면으로 넘어갑니다.' : `${whichError ? '서버와의 통신에 실패했습니다. 다시 시도해 주세요' : '필수 입력 양식을 다시 확인해 주세요.'}`}\n        confirmHandler={() => {apiResult ? toPortfolio() : setShowModal(false)}}\n      />}\n      <WriteHeader type='portfolio'/>\n      <div className='write-wrapper row'>\n        <div className='input-container col'>\n          <Input\n            label={'포트폴리오 제목'}\n            width={'100%'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value,'title');\n              handleErrorChange(null,e.target.value,'title',checkValidations);\n            }}\n            placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n            type='text'\n            maxLength={30}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={portfolioWriteRule.title.max}\n            proGressNum={dataForm.title.length ?? 0}\n            error={dataForm.title.length < 10 ? true : false}\n          />\n\n          <SelectBox\n            text={'사용할 언어를 선택 해주세요.'}\n            component={<Select\n              width={width}\n              options={languagesOptions}\n              defaultLabel={'-'}\n              onClickHandler={(e)=>{\n                handleInputChange(null,e,'lang')\n                handleErrorChange(null,e,'lang',checkValidations)\n              }}\n            />}\n            error={errors.lang}\n            name='언어'\n          />\n\n          <SelectBox\n            text={'포트폴리오에 댓글 허용 여부'}\n            component={\n              <ToggleButton\n                width='10rem'\n                height='5rem'\n                onClickHandler={()=>{\n                  handleInputChange(null, !dataForm.isComment, 'isComments')\n                }}\n                defaultValue={dataForm.isComment}\n                hideError={true}\n              />\n            }\n            hideError={true}\n            customText={dataForm.isComment ? '허용됨' : '허용되지 않음'}\n          />\n          \n          <EnterTag width=\"100%\" height=\"3.5rem\" placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\" dataForm={dataForm} handleInputChange={handleInputChange}/>\n          \n          <Input\n            label={'포트폴리오 본문'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'body')\n              handleErrorChange(null,e.target.value,'body',checkValidations)\n            }}\n            placeholder={'최소 200 ~ 1000글자까지 입력 가능합니다. (필수)'}\n            maxLength={1000}\n            error={errors.body}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={portfolioWriteRule.body.max}\n            proGressNum={dataForm.body.length ?? 0}\n            error={dataForm.body.length < 100 ? true : false}\n          />\n\n        </div>\n\n        <div className='imgs-container col'>\n          <FileInput\n            name={'타이틀 이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={1}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            handleErrorChange={handleErrorChange}\n            clearError={clearError}\n          />\n\n          <FileInput\n            name={'이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={10}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n      <SubmitModalBox\n        submitTitle={'작성 확인'}\n        submitMessage={'댓글 허락시에 달리는 댓글은 작성자에 한해서 자유롭게 삭제 할 수 있습니다.'}\n        submitCheckHandler={()=>{\n            setShowModal(true);\n            setIsLoading(true);\n            writeSubmitHandler(dataForm,errors,setErrors,'portfolio',loginUserData.userInfo.memberId)\n            .then(()=>setApiResult(true))\n            .catch((err)=>{\n              setWhichError(err==='formError' ? false : true);\n              setApiResult(false)})\n            .finally(()=>setIsLoading(false));\n          }\n        }\n        cancelTitle={'취소 확인'}\n        cancelMessage={'취소시 작성한 내용은 저장되지 않습니다.'}\n        cancelCheckHandler ={toPortfolio}\n      />\n    </StyleProjectWrite>\n  );\n}\n"],"names":["StyleToggleContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","$width","$height","concat","ToggleButton","_ref","_ref$width","width","_ref$height","height","_ref$defaultValue","defaultValue","onClickHandler","rest","_useState","useState","_useState2","_slicedToArray","isOn","setIsOn","useEffect","undefined","_jsx","_Fragment","children","_objectSpread","className","onClick","StyleProjectWrite","Page","PortfolioWrite","_dataForm$title$lengt","_dataForm$body$length","toPortfolio","useNav","_useForm","useForm","portfolioWriteInitData","_useForm2","dataForm","handleInputChange","_useError","useError","portfolioErrorInitData","portfolioWriteRule","_useError2","errors","handleErrorChange","clearError","setErrors","showModal","setShowModal","_useState3","_useState4","apiResult","setApiResult","_useState5","_useState6","whichError","setWhichError","_useState7","_useState8","isLoading","setIsLoading","loginUserData","useSelector","state","user","languagesOptions","arr","push","value","label","i","languages","length","_jsxs","Modal","type","setIsOpen","title","body","confirmHandler","WriteHeader","Input","onChange","e","target","checkValidations","placeholder","maxLength","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","Select","options","defaultLabel","lang","name","isComment","hideError","customText","EnterTag","FileInput","number","SubmitModalBox","submitTitle","submitMessage","submitCheckHandler","writeSubmitHandler","userInfo","memberId","then","catch","err","finally","cancelTitle","cancelMessage","cancelCheckHandler"],"sourceRoot":""}