{"version":3,"file":"static/js/70.341e13e9.chunk.js","mappings":"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","sources":["components/common/PortfolioWriteCommon.jsx","components/common/ToggleButton.jsx","pages/NotFound.jsx","pages/PortfolioEdit.jsx","utils/shapingApiData.js"],"sourcesContent":["import styled from 'styled-components';\nimport { desktop } from '../../static/theme';\nconst StylePortfolioWrite = styled.section`\n  width: var(--inner);\n  margin: var(--center);\n  padding-top: 50px;\n  .write-wrapper {\n    display: flex;\n    .input-container {\n      gap: 15px;\n      width: 1%;\n      flex: 1;\n    }\n    gap: 100px;\n    ${desktop} {\n      flex-direction: column;\n      .input-container {\n        width: 100%;\n        flex: 1;\n      }\n    }\n  }\n  .write-description {\n    position: sticky;\n    top: 50px;\n    order: 1;\n    ${desktop} {\n      position: static;\n      order: 0;\n    }\n  }\n  input {\n    border: none;\n    border-bottom: 1px solid var(--black-600);\n    padding-top: 10px;\n    padding-left: 3px;\n    border-radius: 0;\n    transition: all.1s;\n    font-weight: var(--nanum-semi-bold);\n    font-size: 1.6rem;\n    &:focus {\n      border-color: var(--black-100);\n    }\n  }\n  .progress-input {\n    position: relative;\n    .progress-bar {\n      position: absolute;\n      bottom: 25px;\n    }\n  }\n  .selectors {\n    position: relative;\n    display: flex;\n    gap: 30px;\n    .lang-selector {\n      flex: 1;\n    }\n  }\n  .tag-container {\n    margin-top: 30px;\n    input {\n      margin-bottom: -10px;\n    }\n  }\n  .body-content {\n    border: 1px solid var(--black-500);\n    transition: all.1s;\n    font-weight: var(--nanum-bold);\n    font-size: 1.6rem;\n    &:focus {\n      border-color: var(--black-100);\n    }\n  }\n  .progress-textarea {\n    position: relative;\n    .progress-bar {\n      position: absolute;\n      top: 10px;\n    }\n  }\n\n  .body-image {\n    margin-top: 40px;\n  }\n  .button-box {\n    margin-top: 60px;\n    display: flex;\n    gap: 20px;\n    button {\n      width: 70px;\n    }\n  }\n`;\nexport default StylePortfolioWrite;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyleToggleContainer = styled.div`\n  position: relative;\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n  cursor: pointer;\n  border-radius: 50px;\n  transition: 0.3s;\n  border: 1px solid white;\n  &.toggle--checked {\n    background-color: #363030;\n  }\n\n  .toggle-circle {\n    cursor: pointer;\n    transition: all 0.3s;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    left: 2px;\n    width: ${(props) => `calc(${props.$height} - 8px)`};\n    height: ${(props) => `calc(${props.$height} - 8px)`};\n    border-radius: 50%;\n    background-color: var(--black-100);\n  }\n  .toggle--checked {\n    left: ${(props) => `calc(${props.$width} - ${props.$height} + 3px)`};\n  }\n`;\n\n/**\n *\n * @param {string} width 전체너비\n * @param {string} height 전체높이\n * @param {string} beforeBackColor 활성화 전 컬러\n * @param {string} afterBackColor 활성화 후 컬러\n * @param {string} circleColor 동그라미 컬러\n * @param {boolean} defaultValue 초기 상태 값\n * @param {function} onClickHandler 버튼 클릭시 작동되는 핸들러\n * @param {any} rest 나머지\n * @returns\n */\n\nexport default function ToggleButton({\n  width = '70px',\n  height = '35px',\n  defaultValue = false,\n  onClickHandler,\n  rest,\n}) {\n  const [isOn, setIsOn] = useState(defaultValue);\n  const handleToggleClick = () => {\n    setIsOn(!isOn);\n    onClickHandler && onClickHandler(!isOn);\n  };\n\n  useEffect(() => {\n    if (defaultValue !== undefined) {\n      setIsOn(defaultValue);\n    }\n  }, [defaultValue]);\n\n  return (\n    <>\n      <StyleToggleContainer\n        $width={width}\n        $height={height}\n        {...rest}\n        className={`toggle-container ${isOn && 'toggle--checked'}`}\n        onClick={handleToggleClick}\n      >\n        <div className={`toggle-circle ${isOn && 'toggle--checked'}`} />\n      </StyleToggleContainer>\n    </>\n  );\n}\n","import React from 'react';\nimport { styled } from 'styled-components';\nimport Page from '../components/common/Page';\nimport { StyleBackgroundButton } from '../components/common/Buttons';\nimport useNav from '../hooks/useNav';\n\nconst StyleNotFound = styled(Page)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h2 {\n    font-size: 15rem;\n    margin-bottom: 50px;\n    font-weight: bold;\n    color: var(--backgroundColor);\n    text-shadow: 0px 0px 10px var(--black-300);\n  }\n  span {\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 30px;\n    font-weight: var(--nanum-semi-bold);\n    color: var(--black-300);\n  }\n  button {\n    padding: 10px 25px;\n  }\n`;\n\nexport default function NotFound() {\n  const { toAbout } = useNav();\n  return (\n    <StyleNotFound>\n      <h2>404</h2>\n      <span>요청하신 페이지를 찾을 수 없습니다.</span>\n      <StyleBackgroundButton onClick={toAbout}>홈으로</StyleBackgroundButton>\n    </StyleNotFound>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport useForm from '../hooks/useForm';\nimport Page from './../components/common/Page';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteDescription from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport ToggleButton from '../components/common/ToggleButton';\nimport languages from '../static/languages';\nimport { portfolioWriteInitData, portfolioWriteRule } from '../static/portfolioInit';\nimport { shapingApiData } from '../utils/shapingApiData';\nimport { useParams } from 'react-router-dom';\nimport api from '../hooks/useAxiosInterceptor';\nimport Modal from '../components/common/Modal';\nimport { StyleBorderButton } from '../components/common/Buttons';\nimport { useSelector } from 'react-redux';\nimport useSubmitWriteEdit from '../hooks/useSubmitWriteEdit';\nimport StylePortfolioWrite from '../components/common/PortfolioWriteCommon';\nimport NotFound from './NotFound';\n\nexport default function PortfolioEdit() {\n  const { toPortfolio } = useNav();\n  const { portfolioId } = useParams();\n  const [dataForm, handleInputChange, clearForm, setDataForm] = useForm(portfolioWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError({}, portfolioWriteRule);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, isSuccess, submitHandler, setApiResult] = useSubmitWriteEdit();\n  const [isCancel, setIsCancel] = useState(false);\n  const [firstApiSuccess, setFirstApiSuccess] = useState(true);\n  const loginUserData = useSelector((state) => state.user);\n  const {\n    userInfo: { memberId },\n  } = useSelector((state) => state.user);\n  const width = '100%';\n  const height = '40rem';\n\n  useEffect(() => {\n    api\n      .get(`/portfolios/${portfolioId}`)\n      .then((res) => {\n        if (res.data.data.memberId !== memberId) {\n          toPortfolio();\n          alert('수정 권한이 없습니다');\n        }\n        setDataForm(shapingApiData(res.data.data));\n        setFirstApiSuccess(true);\n      })\n      .catch((err) => {\n        setShowModal(true);\n        if (err.message === 'Request failed with status code 404') {\n          setFirstApiSuccess('404');\n        } else {\n          setFirstApiSuccess(false);\n        }\n      });\n  }, []);\n\n  //테스트용 언어 옵션들\n  const languagesOptions = (() => {\n    const arr = [];\n    arr.push({ value: '', label: '-' });\n    for (let i = 0; i < languages.length; i++) {\n      arr.push({ value: languages[i], label: languages[i] });\n    }\n    return arr;\n  })();\n\n  return (\n    <>\n      {firstApiSuccess === '404' ? (\n        <NotFound />\n      ) : (\n        firstApiSuccess === true && (\n          <StylePortfolioWrite className=\"col\">\n            {showModal && (\n              <Modal\n                type={isCancel ? 'confirm' : 'alert'}\n                setIsOpen={setShowModal}\n                title={'알림'}\n                body={\n                  firstApiSuccess ? apiResult : '서버와의 통신에 실패했습니다. 다시 시도해 주세요.'\n                }\n                confirmHandler={() =>\n                  !firstApiSuccess || isSuccess || isCancel ? toPortfolio() : setShowModal(false)\n                }\n              />\n            )}\n            <div className=\"write-wrapper\">\n              <WriteDescription type=\"portfolio\" state=\"edit\" />\n              <div className=\"input-container col\">\n                <div className=\"progress-input\">\n                  <Input\n                    label={'포트폴리오 제목'}\n                    width={'100%'}\n                    onChange={(e) => {\n                      handleInputChange(null, e.target.value, 'title');\n                      handleErrorChange(null, e.target.value, 'title', checkValidations);\n                    }}\n                    placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n                    type=\"text\"\n                    maxLength={30}\n                    defaultValue={dataForm.title}\n                  />\n                  <ProGress\n                    width={'100%'}\n                    fontSize={'1.3rem'}\n                    comPleteNum={portfolioWriteRule.title.max}\n                    proGressNum={dataForm.title.length ?? 0}\n                    error={dataForm.title.length < 10 ? true : false}\n                  />\n                </div>\n                <div className=\"selectors\">\n                  <SelectBox\n                    className=\"lang-selector\"\n                    text={'언어 선택'}\n                    component={\n                      <Select\n                        height=\"37px\"\n                        width={width}\n                        options={languagesOptions}\n                        defaultLabel={dataForm.lang}\n                        onClickHandler={(e) => {\n                          handleInputChange(null, e, 'language');\n                          handleErrorChange(null, e, 'language', checkValidations);\n                        }}\n                      />\n                    }\n                  />\n\n                  <SelectBox\n                    className=\"comment-selector\"\n                    text={'댓글작성 허용'}\n                    component={\n                      <ToggleButton\n                        onClickHandler={() => {\n                          handleInputChange(null, dataForm.isComment ? 0 : 1, 'isComment');\n                        }}\n                        defaultValue={dataForm.isComment}\n                        hideError={true}\n                      />\n                    }\n                  />\n\n                  <SelectBox\n                    text={'구직용 여부'}\n                    component={\n                      <ToggleButton\n                        onClickHandler={() => {\n                          handleInputChange(null, dataForm.isEmploy ? 0 : 1, 'isEmploy');\n                        }}\n                        defaultValue={dataForm.isEmploy}\n                        hideError={true}\n                      />\n                    }\n                    hideError={true}\n                  />\n                </div>\n                <EnterTag\n                  className=\"tag-container\"\n                  width=\"100%\"\n                  height=\"3.5rem\"\n                  placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n                  handleInputChange={handleInputChange}\n                  defaultTags={\n                    dataForm.tags.length === 1 && dataForm.tags[0] === '' ? [] : dataForm.tags\n                  }\n                />\n                <div className=\"progress-textarea\">\n                  <Input\n                    className=\"body-content\"\n                    label={'포트폴리오 본문'}\n                    width={width}\n                    height={height}\n                    type={'textarea'}\n                    onChange={(e) => {\n                      handleInputChange(null, e.target.value, 'body');\n                      handleErrorChange(null, e.target.value, 'body', checkValidations);\n                    }}\n                    placeholder={'최소 200 ~ 1000글자까지 입력 가능합니다. (필수)'}\n                    maxLength={1000}\n                    error={errors.body}\n                    defaultValue={dataForm.body}\n                  />\n                  <ProGress\n                    className={'margin-top-remove'}\n                    width={'100%'}\n                    height={'1.2rem'}\n                    fontSize={'1.2rem'}\n                    comPleteNum={portfolioWriteRule.body.max}\n                    proGressNum={dataForm.body.length ?? 0}\n                    error={dataForm.body.length < 100 ? true : false}\n                  />\n                </div>\n                <FileInput\n                  className=\"title-image\"\n                  name={'타이틀 이미지'}\n                  width={'100%'}\n                  height={'200px'}\n                  number={1}\n                  dataForm={dataForm}\n                  handleInputChange={handleInputChange}\n                  handleErrorChange={handleErrorChange}\n                  setWillDeleteImgs={true}\n                  clearError={clearError}\n                  defaultImgs={dataForm.titleImage}\n                />\n\n                <FileInput\n                  className=\"body-image\"\n                  name={'이미지'}\n                  width={'100%'}\n                  height={'200px'}\n                  number={10}\n                  dataForm={dataForm}\n                  handleInputChange={handleInputChange}\n                  setWillDeleteImgs={true}\n                  defaultImgs={dataForm.images}\n                />\n              </div>\n            </div>\n            <div className=\"button-box\">\n              <StyleBorderButton\n                onClick={() => {\n                  setShowModal(true);\n                  submitHandler(\n                    dataForm,\n                    errors,\n                    setErrors,\n                    'portfolio',\n                    loginUserData.userInfo.memberId,\n                    portfolioId,\n                  );\n                }}\n              >\n                수정\n              </StyleBorderButton>\n              <StyleBorderButton\n                onClick={() => {\n                  setShowModal(true);\n                  setIsCancel(true);\n                  setApiResult('작성 취소시 작성한 내용은 저장되지 않습니다.');\n                }}\n              >\n                취소\n              </StyleBorderButton>\n            </div>\n          </StylePortfolioWrite>\n        )\n      )}\n    </>\n  );\n}\n","export const shapingApiData = (obj,type) => {\n    const newData = {...obj};\n    for(let key in obj) {\n        if(key === 'images') {\n            const tempArr = [];\n            for(let i = 0; i < obj[key].length; i++) {\n                tempArr.push(obj[key][i].imageUrl);\n            }\n            newData[key] = tempArr;\n            newData.imageFile = new FormData();\n            newData.imageUrls = [];\n        } else if (key === 'projectTitleImage' || key === 'portfolioTitleImage') {\n            newData.titleImage = [obj[key].imageUrl];\n            newData.titleImageFile = new FormData();\n            newData.titleImageUrl = '';\n        }\n        \n    }\n    return newData;\n}\n"],"names":["StylePortfolioWrite","styled","section","_templateObject","_taggedTemplateLiteral","desktop","StyleToggleContainer","div","props","$width","$height","concat","ToggleButton","_ref","_ref$width","width","_ref$height","height","_ref$defaultValue","defaultValue","onClickHandler","rest","_useState","useState","_useState2","_slicedToArray","isOn","setIsOn","useEffect","undefined","_jsx","_Fragment","children","_objectSpread","className","onClick","StyleNotFound","Page","NotFound","toAbout","useNav","_jsxs","StyleBackgroundButton","PortfolioEdit","_dataForm$title$lengt","_dataForm$body$length","toPortfolio","portfolioId","useParams","_useForm","useForm","portfolioWriteInitData","_useForm2","dataForm","handleInputChange","setDataForm","_useError","useError","portfolioWriteRule","_useError2","errors","handleErrorChange","clearError","setErrors","showModal","setShowModal","_useSubmitWriteEdit","useSubmitWriteEdit","_useSubmitWriteEdit2","apiResult","isSuccess","submitHandler","setApiResult","_useState3","_useState4","isCancel","setIsCancel","_useState5","_useState6","firstApiSuccess","setFirstApiSuccess","loginUserData","useSelector","state","user","memberId","userInfo","api","get","then","res","data","alert","shapingApiData","catch","err","message","languagesOptions","arr","push","value","label","i","languages","length","Modal","type","setIsOpen","title","body","confirmHandler","WriteDescription","Input","onChange","e","target","checkValidations","placeholder","maxLength","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","Select","options","defaultLabel","lang","isComment","hideError","isEmploy","EnterTag","defaultTags","tags","FileInput","name","number","setWillDeleteImgs","defaultImgs","titleImage","images","StyleBorderButton","obj","newData","key","tempArr","imageUrl","imageFile","FormData","imageUrls","titleImageFile","titleImageUrl"],"sourceRoot":""}