{"version":3,"file":"static/js/848.c4c436cd.chunk.js","mappings":"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","sources":["components/common/Input.jsx","components/profile/isValid.js","pages/SignIn.jsx"],"sourcesContent":["import React from 'react';\nimport { styled } from 'styled-components';\n\nconst StyleErrorInput = styled.div`\n  margin: 5px 0 5px 0;\n  div {\n    color: var(--error);\n    padding: 5px;\n  }\n`;\n\nconst Label = styled.label`\n  color: ${(props) => (props.$labelColor ? props.$labelColor : 'var(--black-100)')};\n  font-size: 1.6rem;\n  background-color: transparent;\n`;\n\nconst StyleInput = styled.input`\n  margin-top: 7px;\n  background: none;\n  border: 1px solid;\n  font-size: ${(props) => props.$fontSize};\n  border-color: ${(props) => (props.$borderColor ? props.$borderColor : 'var(--black-100)')};\n  border-radius: ${(props) => (props.$borderRadius ? props.$borderRadius : '3px')};\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n  color: ${(props) => (props.$color ? props.$color : 'var(--black-100)')};\n  padding: 13px;\n  font-size: ${(props) => (props.$fontSize ? props.$fontSize : '1.5rem')};\n`;\n\nconst StyleError = styled.div`\n  width: fit-content;\n  font-size: 1.5rem;\n  height: 1rem;\n  opacity: ${(props) => (props.error === '' ? 0 : 1)};\n`;\n\nconst StyleTextArea = styled.textarea`\n  margin-top: 7px;\n  background: none;\n  border: 1px solid;\n  border-color: ${(props) => (props.$borderColor ? props.$borderColor : 'var(--black-100)')};\n  border-radius: ${(props) => (props.$borderRadius ? props.$borderRadius : '3px')};\n  font-size: ${(props) => props.$fontSize};\n  width: ${(props) => props.$width};\n  min-height: ${(props) => props.$height};\n  color: ${(props) => (props.$color ? props.$color : 'var(--black-100)')};\n  padding: 8px 6px;\n  font-size: 1.5rem;\n  font-family: var(--nanum);\n  line-height:1.3\n`;\n\n/**\n * 공용 인풋 폼 입니다.\n * 사용시 필요한 정보와 나머지 옵션은 ...rest 스프레드 문법을 통해 전달됩니다.\n * @param {string} label - 라벨 텍스트 입니다.\n * @param {string} error - 에러시 띄우고싶은 메세지입니다.\n * @param {string} width - 인풋의 너비입니다.\n * @param {string} height - 인풋의 높이입니다.\n * @param {string} fontSize - 인풋의 폰트 사이즈입니다.\n * @param {string} color - 인풋의 컬러입니다. 기본 값 --black-100\n * @param {string} labelColor - 라벨 텍스트의 컬러입니다. 기본 값 --black-100\n * @param {string} borderColor -  인풋의 border 색상입니다. 기본 값 --black-100\n * @param {function} onChangeHandler -  인풋의 onChange이벤트에 넘어오는 함수입니다.\n * @param {string} type -  text,textarea 둘 중 하나로 넘기면 text또는 textarea를 만들어줍니다.\n * @param {any} rest - 기타 프로퍼티들은 인풋 요소에 스프레드 문법으로 전달됩니다.\n * @returns {JSX.Element}\n */\n\nexport default function Input({\n  label,\n  error,\n  name,\n  width,\n  height,\n  color,\n  fontSize,\n  labelColor,\n  borderColor,\n  borderRadius,\n  onChangeHandler,\n  type,\n  ...rest\n}) {\n  return (\n    <StyleErrorInput className=\"col\">\n      <Label htmlFor={name} $labelColor={labelColor}>\n        {label}\n      </Label>\n      {type === 'textarea' ? (\n        <StyleTextArea\n          rows={1}\n          $width={width}\n          $height={height}\n          $color={color}\n          $fontSize={fontSize}\n          $borderColor={borderColor}\n          $borderRadius={borderRadius}\n          onChange={onChangeHandler}\n          {...rest}\n        />\n      ) : (\n        <StyleInput\n          $width={width}\n          $height={height}\n          $color={color}\n          $fontSize={fontSize}\n          $borderColor={borderColor}\n          $borderRadius={borderRadius}\n          onChange={onChangeHandler}\n          type={type}\n          {...rest}\n        />\n      )}\n      <StyleError $error={error}>{error}</StyleError>\n    </StyleErrorInput>\n  );\n}\n","export const isValidEmail = (email) => {\n  const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  return emailPattern.test(email);\n};\n\nexport const isValidPassword = (password) => {\n  const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{8,}$/;\n  return passwordPattern.test(password);\n};\n\nexport const isValidPhone = (phone) => {\n  const phonePattern = /^010\\d{8}$/;\n  return phonePattern.test(phone);\n};\n\nexport const isValidTag = (tag) => {\n  const tagPattern = /^[a-zA-Z0-9가-힣]+$/;\n  return tagPattern.test(tag);\n};\n","import React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport useNav from '../hooks/useNav';\nimport { FcGoogle } from 'react-icons/fc';\nimport Page from '../components/common/Page';\nimport { AiFillGithub } from 'react-icons/ai';\nimport Input from '../components/common/Input';\nimport api from '../hooks/useAxiosInterceptor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateUser } from '../redux/userForm/userSlice';\nimport { isValidEmail, isValidPassword } from '../components/profile/isValid';\nimport Spinner from '../components/common/Spinner';\nimport { desktop, mobile } from '../static/theme';\n\nconst StyleContainer = styled(Page)`\n  display: flex;\n  width: fit-content;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n  font-size: 2rem;\n  h3 {\n    font-size: 5rem;\n    font-weight: 700;\n  }\n  span {\n    font-size: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #2f87fe;\n    font-weight: 700;\n    text-align: center;\n    cursor: pointer;\n  }\n  .bottom {\n    margin-bottom: 5rem;\n    ${desktop} {\n      margin-bottom: 5rem;\n    }\n    @media (max-width: 900px) {\n      margin-bottom: 3rem;\n    }\n    ${mobile} {\n      margin-bottom: 3rem;\n    }\n  }\n  .logo {\n    margin-right: 20px;\n  }\n  .formGap {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n  .error {\n    font-size: 1.3rem;\n  }\n  .colgap {\n    gap: 3rem;\n  }\n`;\n\nconst StyleRowContainer = styled.div`\n  justify-content: center;\n  width: 100%;\n  gap: 6rem;\n  display: flex;\n  ${desktop} {\n    flex-direction: row;\n  }\n  @media (max-width: 900px) {\n    flex-direction: column;\n    gap: 4rem;\n  }\n  ${mobile} {\n    flex-direction: column;\n    gap: 4rem;\n  }\n`;\n\nconst StyleColContainer = styled.div`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyleBtnContainer = styled.button`\n  width: 40rem;\n  height: 56.22px;\n  font-size: 2rem;\n  border: 1px solid var(--black-300);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n  padding: 2rem 4rem;\n  border-radius: 10px;\n  font-weight: 700;\n  &:hover {\n    background-color: #ffffff12;\n  }\n`;\n\nconst StyleDivider = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  height: 100%;\n  &::before {\n    content: '';\n    border-left: 1px solid var(--black-500);\n    position: absolute;\n    height: 40%;\n    top: 0;\n    ${desktop} {\n      top: 0;\n    }\n    @media (max-width: 900px) {\n      left: 0;\n      width: 40%;\n      border-bottom: 1px solid var(--black-500);\n    }\n    ${mobile} {\n      left: 0;\n      width: 40%;\n      border-bottom: 1px solid var(--black-500);\n    }\n  }\n\n  &::after {\n    content: '';\n    border-left: 1px solid var(--black-500);\n    position: absolute;\n    height: 40%;\n    bottom: 0;\n    ${desktop} {\n      bottom: 0;\n    }\n    @media (max-width: 900px) {\n      right: 0;\n      width: 40%;\n      border-bottom: 1px solid var(--black-500);\n    }\n    ${mobile} {\n      right: 0;\n      width: 40%;\n      border-bottom: 1px solid var(--black-500);\n    }\n  }\n\n  span {\n    background-color: transparent;\n    color: var(--black-500);\n    position: absolute;\n    margin: auto;\n    height: fit-content;\n    padding: 10px 0;\n    top: 0;\n    bottom: 0;\n    ${desktop} {\n      top: 0;\n      bottom: 0;\n    }\n    @media (max-width: 900px) {\n      left: 0;\n      right: 0;\n    }\n    ${mobile} {\n      left: 0;\n      right: 0;\n    }\n  }\n`;\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({ email: '', password: '' });\n  const [isSubmit, setIsSubmit] = useState(false);\n  const { toSignup, toAbout } = useNav();\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state) => state.user.isLogin);\n\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    const isvalidEmail = isValidEmail(email);\n    const isvalidPassword = isValidPassword(password);\n    setIsSubmit(true);\n    if (isvalidEmail && isvalidPassword) {\n      setError({ email: '', password: '' });\n      api\n        .post('/members/login', { email, password })\n        .then((el) => {\n          dispatch(\n            updateUser({\n              isLogin: true,\n              userInfo: {\n                memberId: el.data.memberId,\n                userName: el.data.userName,\n                userImgUrl: el.data.userImgUrl,\n                socialType: el.data.socialType,\n              },\n              likeList: {\n                portfolioList: el.data.portfolioList,\n                projectList: el.data.projectList,\n              },\n            }),\n          );\n          toAbout();\n        })\n        .catch((error) => {\n          if (error.response.status === 401) {\n            setError({ ...error, password: '비밀번호가 유효하지 않습니다.' });\n          }\n          if (error.response.status === 404) {\n            setError({ ...error, email: '이메일이 유효하지 않습니다.' });\n          }\n        });\n    } else if (!isvalidEmail && !isvalidPassword) {\n      setError({\n        email: '올바른 이메일 형식을 입력해주세요.',\n        password: '영어,숫자,특수기호 포함 8글자 이상으로 입력해주세요.',\n      });\n    } else if (!isvalidEmail) {\n      setError({ ...error, email: '올바른 이메일 형식을 입력해주세요.' });\n    } else if (!isvalidPassword) {\n      setError({ ...error, password: '영어,숫자,특수기호 포함 8글자 이상으로 입력해주세요.' });\n    }\n    setIsSubmit(false);\n  };\n\n  const handleClickGoogleBtn = () => {\n    window.location.assign(\n      `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=15196070608-ti8mt0m3fo8tj48172bhq72h4re8bcni.apps.googleusercontent.com&scope=email%20profile&state=J8xE05niEcAJo0CAB8XkqVr25Prh7dXvkrqthZ2YJw0%3D&redirect_uri=https://spec.today/signin`,\n    );\n  };\n\n  const handleClickGithubBtn = () => {\n    window.location.assign(\n      'https://github.com/login/oauth/authorize?client_id=b7cd8d79c75bb40d352a',\n    );\n  };\n\n  useEffect(() => {\n    // 마운트 함수\n    if (isLogin) toAbout();\n    const url = new URL(window.location.href);\n    const state = url.searchParams.get('state');\n    const authorizationCode = url.searchParams.get('code');\n    if (authorizationCode) {\n      if (state) {\n        api\n          .get(`/oauth2/google/signin?code=${authorizationCode}`)\n          .then((el) => {\n            if (el.status === 200) {\n              dispatch(\n                updateUser({\n                  isLogin: true,\n                  userInfo: {\n                    memberId: el.data.memberId,\n                    userName: el.data.userName,\n                    userImgUrl: el.data.userImgUrl,\n                    socialType: el.data.socialType,\n                  },\n                  likeList: {\n                    portfolioList: el.data.portfolioList,\n                    projectList: el.data.projectList,\n                  },\n                }),\n              );\n              toAbout();\n            }\n          })\n          .catch((error) => {\n            if (error.response.status === 404) {\n              api\n                .get(`/oauth2/google/signup?code=${authorizationCode}`)\n                .then((el) => {\n                  if (el.status === 201) {\n                    api\n                      .get(`/oauth2/google/signin?code=${authorizationCode}`)\n                      .then((el) => {\n                        if (el.status === 200) {\n                          dispatch(\n                            updateUser({\n                              isLogin: true,\n                              userInfo: {\n                                memberId: el.data.memberId,\n                                userName: el.data.userName,\n                                userImgUrl: el.data.userImgUrl,\n                                socialType: el.data.socialType,\n                              },\n                              likeList: {\n                                portfolioList: el.data.portfolioList,\n                                projectList: el.data.projectList,\n                              },\n                            }),\n                          );\n                          toAbout();\n                        }\n                      })\n                      .catch((error) => console.log(error));\n                  }\n                })\n                .catch((error) => {\n                  console.log(error);\n                });\n            }\n          });\n      } else {\n        api\n          .get(`/oauth2/github/signin?code=${authorizationCode}`)\n          .then((el) => {\n            if (el.status === 200) {\n              dispatch(\n                updateUser({\n                  isLogin: true,\n                  userInfo: {\n                    memberId: el.data.memberId,\n                    userName: el.data.userName,\n                    userImgUrl: el.data.userImgUrl,\n                    socialType: el.data.socialType,\n                  },\n                  likeList: {\n                    portfolioList: el.data.portfolioList,\n                    projectList: el.data.projectList,\n                  },\n                }),\n              );\n              toAbout();\n            }\n          })\n          .catch((error) => {\n            // if (error.response.status === 404) {\n            //   api\n            //     .get(`/oauth2/github/signup?code=${authorizationCode}`)\n            //     .then((el) => {\n            //       if (el.status === 201) {\n            //         api\n            //           .get(`/oauth2/github/signin?code=${authorizationCode}`)\n            //           .then((el) => {\n            //             if (el.status === 200) {\n            //               dispatch(\n            //                 updateUser({\n            //                   isLogin: true,\n            //                   userInfo: {\n            //                     memberId: el.data.memberId,\n            //                     userName: el.data.userName,\n            //                     userImgUrl: el.data.userImgUrl,\n            //                     socialType: el.data.socialType,\n            //                   },\n            //                   likeList: {\n            //                     portfolioList: el.data.portfolioList,\n            //                     projectList: el.data.projectList,\n            //                   },\n            //                 }),\n            //               );\n            //               toAbout();\n            //             }\n            //           })\n            //           .catch((error) => console.log(error));\n            //       }\n            //     })\n            //     .catch((error) => {\n            //       console.log(error);\n            //     });\n            // }\n          });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isSubmit ? (\n        <Spinner />\n      ) : (\n        <StyleContainer>\n          <h3>로그인</h3>\n          <div className=\"row gap bottom\">\n            <span>회원가입이 필요하신가요 ?</span>\n            <p onClick={toSignup}>&nbsp;회원가입</p>\n          </div>\n          <StyleRowContainer>\n            <StyleColContainer className=\"col colgap\">\n              <StyleBtnContainer onClick={handleClickGoogleBtn}>\n                <FcGoogle className=\"logo\" size={30} />\n                Google 로그인\n              </StyleBtnContainer>\n              <StyleBtnContainer onClick={handleClickGithubBtn}>\n                <AiFillGithub className=\"logo\" size={30} />\n                Github 로그인\n              </StyleBtnContainer>\n            </StyleColContainer>\n            <div>\n              <StyleDivider>\n                <span>OR</span>\n              </StyleDivider>\n            </div>\n            <StyleColContainer className=\"col gap\">\n              <form className=\"formGap\" onSubmit={handleSubmitForm}>\n                <Input\n                  label={'이메일'}\n                  placeholder=\"name@example.com\"\n                  width=\"40rem\"\n                  height=\"56.22px\"\n                  borderRadius=\"10px\"\n                  fontSize=\"2rem\"\n                  type=\"text\"\n                  value={email}\n                  onChange={handleChangeEmail}\n                  autoComplete=\"on\"\n                  error={error.email}\n                />\n                <Input\n                  label={'비밀번호'}\n                  placeholder=\"영어,숫자,특수기호 포함 8글자 이상\"\n                  type=\"password\"\n                  width=\"40rem\"\n                  height=\"56.22px\"\n                  borderRadius=\"10px\"\n                  maxLength={20}\n                  fontSize=\"2rem\"\n                  autoComplete=\"off\"\n                  value={password}\n                  onChange={handleChangePassword}\n                  error={error.password}\n                />\n                <StyleBtnContainer onClick={handleSubmitForm}>로그인</StyleBtnContainer>\n              </form>\n            </StyleColContainer>\n          </StyleRowContainer>\n        </StyleContainer>\n      )}\n    </>\n  );\n}\n"],"names":["StyleErrorInput","styled","div","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","props","$labelColor","StyleInput","input","_templateObject3","$fontSize","$borderColor","$borderRadius","$width","$height","$color","StyleError","_templateObject4","error","StyleTextArea","textarea","_templateObject5","Input","_ref","name","width","height","color","fontSize","labelColor","borderColor","borderRadius","onChangeHandler","type","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","htmlFor","_objectSpread","rows","onChange","$error","isValidEmail","email","test","isValidPassword","password","isValidPhone","phone","isValidTag","tag","StyleContainer","Page","desktop","mobile","StyleRowContainer","StyleColContainer","StyleBtnContainer","button","StyleDivider","SignIn","_useState","useState","_useState2","_slicedToArray","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","setError","_useState7","_useState8","isSubmit","setIsSubmit","_useNav","useNav","toSignup","toAbout","dispatch","useDispatch","isLogin","useSelector","state","user","handleSubmitForm","e","preventDefault","isvalidEmail","isvalidPassword","api","post","then","el","updateUser","userInfo","memberId","data","userName","userImgUrl","socialType","likeList","portfolioList","projectList","catch","response","status","useEffect","url","URL","window","location","href","searchParams","get","authorizationCode","concat","console","log","_Fragment","Spinner","onClick","assign","FcGoogle","size","AiFillGithub","onSubmit","placeholder","value","target","autoComplete","maxLength"],"sourceRoot":""}