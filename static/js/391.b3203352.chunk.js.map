{"version":3,"file":"static/js/391.b3203352.chunk.js","mappings":"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","sources":["components/project/DateSelect.jsx","pages/ProjectEdit.jsx","utils/shapingApiData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Select from \"../common/Select\";\nimport { checkValidations } from \"../../utils/checkValidations\";\n\nexport default function DateSelect ({\n    defaultDate,\n    width,\n    handleInputChange,\n    handleErrorChange\n}) {\n    const time = new Date()\n    const [resetDate, setResetDate] = useState([]);\n\n    useEffect(()=>{\n        if(defaultDate?.length) {\n            const parsingDate = new Date(defaultDate);\n            setResetDate([\n                parsingDate.getFullYear(),\n                parsingDate.getMonth()+1,\n                parsingDate.getDate(),\n            ])\n        }\n    },[defaultDate]);\n    \n    const yearOptions = () => {\n        const options = []\n        for(let i = time.getFullYear(); i <= time.getFullYear()+10; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const monthOptions = () => {\n        const options = []\n        for(let i = (time.getFullYear()===resetDate[0] ? time.getMonth()+1 : 1); i <= 12; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    const dayOptions = () => {\n        const options = []\n        const days = new Date(resetDate[0], resetDate[1], 0).getDate();\n        for(let i = (time.getFullYear()===resetDate[0] && time.getMonth()+1===resetDate[1]) ? time.getMonth()+1 : 1; i <= days; i++) {\n            options.push({value:i, label:i});\n        }\n        return options;\n    }    \n    \n    const setOptions = [yearOptions(), monthOptions(), dayOptions()]\n\n    const settingByIndex = (idx,e) => {\n        if(idx === 0) {\n            const newDate = [...resetDate];\n            newDate[0] = e;\n            newDate[1] = '-';\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 1) {\n            const newDate = [...resetDate];\n            newDate[1] = e;\n            newDate[2] = '-';\n            return newDate;\n        } else if (idx === 2) {\n            const newDate = [...resetDate];\n            newDate[2] = e;\n            return newDate;\n        }\n    }\n\n    return (\n        <>\n            {resetDate.map((el,idx)=>\n                <Select\n                    key={idx}\n                    width={width}\n                    options={setOptions[idx]}\n                    defaultLabel={el}\n                    onClickHandler={(e)=>{\n                        setResetDate(settingByIndex(idx,e));\n                        if(idx === 2) {\n                            handleInputChange(null,String(new Date(resetDate[0],resetDate[1]-1,e)), 'closedAt')\n                            handleErrorChange(null,String(new Date(resetDate[0],resetDate[1],e)), 'closedAt', checkValidations)\n                        } else {\n                            handleInputChange(null,'', 'closedAt')\n                            handleErrorChange(null,'', 'closedAt', checkValidations)\n                        }\n                    }}\n                />\n            )}\n        </>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport { StyleBorderButton } from '../components/common/Buttons';\nimport  useForm  from '../hooks/useForm';\nimport DateSelect from '../components/project/DateSelect';\nimport Page from './../components/common/Page';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteHeader from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport languages from '../static/languages'\nimport api from '../hooks/useAxiosInterceptor';\nimport { projectErrorInitData, projectWriteInitData, projectWriteRule } from '../static/projectInit';\nimport SubmitModalBox from '../components/PfPjPublic/SubmitModalBox';\nimport { writeSubmitHandler } from '../utils/writeSubmitHandler';\nimport { apiWriteDataCheckError, shapingApiData } from '../utils/shapingApiData';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { custom } from '../static/theme';\nimport Modal from '../components/common/Modal';\nimport { useStepContext } from '@mui/material';\n\nconst StyleProjectWrite = styled(Page)`\n  height:auto;\n  background-color: transparent;\n  padding-top:6rem;\n  font-size:1.6rem;\n\n  .margin-top-remove {\n    margin-top:-20px !important;\n  }\n\n  .input-container {\n    width:40%;\n    height:auto;\n    margin-right:3rem;\n    > div {\n      margin-bottom:3rem;\n    }\n  }\n  .imgs-container {\n    width:60%;\n    height:auto;\n    > div {\n      margin-bottom:6rem;\n    }\n  }\n  .submit-box {\n    width:100%;\n    margin-bottom:10rem;\n    display:flex;\n    button {\n      font-size:1.6rem;\n      padding:5px 15px;\n      margin-right:5rem;\n    }\n  }\n  .data-select-container {\n    gap:1rem;\n    div {\n      flex:1;\n    }\n  }\n  ${custom(900)}{\n    .write-wrapper{\n      flex-direction: column;\n    }\n    .input-container {\n      width:100%;\n    }\n    .imgs-container {\n      width:100%;\n    }\n  }\n`\n\n// const responseData = {\n//   view : 0,\n//   memberId : 7,\n//   projectId : 41,\n//   userName : '박찬섭',\n//   userImgUrl : null,\n//   title : '안녕하세요wtrgdrgdhtfth',\n//   totalPeople : 6,\n//   createdAt : String(new Date()),\n//   modifiedAt : String(new Date()),\n//   closedAt : String(new Date()),\n//   body : '기획안 gfukukfhukhfkfhjukvhjm,hjmvhjmhjmvhj,vhj,vhj,vhj,vhj,vhj,vhj,hvj,vhjhjv입니다기획안 gfukukfhukhfkfhjukvhjm,hjmvhjmhjmvhj,vhj,vhj,vhj,vhj,vhj,vhj,hvj,vhjhjv입니다기획안 gfukukfhukhfkfhjukvhjm,hjmvhjmhjmvhj,vhj,vhj,vhj,vhj,vhj,vhj,hvj,vhjhjv입니다',\n//   joinPeople : 'null',\n//   requestPeople : 'null',\n//   description : '즐겁게 해보실 분',\n//   lang : 'react',\n//   images : [\n//     {\n//       imageId : 10,\n//       imageUrl : 'https://source.unsplash.com/random'\n//     },\n//     {\n//       imageId : 11,\n//       imageUrl : 'https://source.unsplash.com/random'\n//     },\n//     {\n//       imageId : 12,\n//       imageUrl : 'https://source.unsplash.com/random'\n//     }\n//   ],\n//   projectTitleImage : {\n//     projectTitleImageId : 6,\n//     imageUrl : 'https://source.unsplash.com/random',\n//   },\n//   tags : ['테1스트','태스1트','태스3트'],\n//   heartCount : 6,\n// }\n\nexport default function ProjectEdit() {\n  const {toProject} = useNav();\n  const [dataForm, handleInputChange, clearForm, setDataForm] = useForm(projectWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError({}, projectWriteRule);\n  const {projectId} = useParams();\n  const loginUserData = useSelector(state=>state.user);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, setApiResult] = useState(false);\n  //false면 프론트측 에러 true면 백측에러\n  const [whichError, setWhichError] = useState(false);\n  const [firstResult, setFirstResult] = useState(true);\n\n  useEffect(()=>{\n    api.get(`/projects/${projectId}`)\n    .then(res=>{\n      setDataForm(shapingApiData(res.data))\n    })\n    .catch(err=>{\n      setShowModal(true);\n      setWhichError(true);\n      setFirstResult(false);\n    });\n  },[])\n\n  const width = '100%';\n  const height = '30rem';\n\n  const languagesOptions = (() => {\n      const arr = [];\n      arr.push({value : '', label : '-'});\n      for(let i = 0; i < languages.length; i++) {\n        arr.push({value: languages[i], label : languages[i]});\n      }\n      return arr;\n  })()\n  \n  return (\n    <StyleProjectWrite className='col'>\n      {showModal && <Modal\n        type={'alert'}\n        setIsOpen={setShowModal}\n        title={apiResult ? '수정 완료' : `${whichError ? '통신 에러' : '입력 형식 오류'}`}\n        body={apiResult ? '확인 버튼 클릭시 프로젝트리스트 화면으로 넘어갑니다.' : `${whichError ? '서버와의 통신에 실패했습니다. 다시 시도해 주세요.' : '필수 입력 양식을 다시 확인해 주세요.'}`}\n        confirmHandler={apiResult ? ()=>{toProject()} : firstResult ? ()=>{setShowModal(false)} : ()=>{toProject()}}\n      />}\n      <WriteHeader type='project' state='edit'/>\n      <div className='write-wrapper row'>\n        <div className='input-container col'>\n\n          <Input\n            label={'프로젝트 제목'}\n            width={'100%'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value,'title');\n              handleErrorChange(null,e.target.value,'title',checkValidations);\n            }}\n            placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n            type='text'\n            maxLength={30}\n            defaultValue={dataForm.title}\n          />\n\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.title.max}\n            proGressNum={dataForm.title.length ?? 0}\n            error={dataForm.title.length < 10 ? true : false}\n          />\n\n          <SelectBox\n            text={'사용할 언어를 선택 해주세요.'}\n            component={\n              <Select\n                width={width}\n                options={languagesOptions}\n                defaultLabel={dataForm.lang}\n                onClickHandler={(e)=>{\n                  handleInputChange(null,e,'lang')\n                  handleErrorChange(null,e,'lang',checkValidations)\n                }}\n              />}\n            error={errors.lang}\n            name='언어'\n          />\n\n          <SelectBox\n            text={'프로젝트 마감 날짜를 선택 해 주세요. (모집 시작은 작성일 기준입니다.)'}\n            component={<div className='data-select-container row'>\n              <DateSelect\n                defaultDate={dataForm.closedAt}\n                width={width}\n                handleInputChange={handleInputChange}\n                handleErrorChange={handleErrorChange}/>\n            </div>}\n            error={errors.closedAt}\n            name='마감 날짜'\n          />\n          \n          <EnterTag\n            width=\"100%\"\n            height=\"3.5rem\"\n            placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n            defaultTags={dataForm.tags}\n            handleInputChange={handleInputChange}\n          />\n          \n          <Input\n            label={'기획서'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'body')\n              handleErrorChange(null,e.target.value, 'body',checkValidations)\n            }}\n            placeholder={'최소 100 ~ 500글자까지 입력 가능합니다. (필수)'}\n            maxLength={500}\n            defaultValue={dataForm.body}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.body.max}\n            proGressNum={dataForm.body.length ?? 0}\n            error={dataForm.body.length < 100 ? true : false}\n          />\n\n          <Input\n            label={'상세 요강'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'description')\n              handleErrorChange(null,e.target.value, 'description', checkValidations)\n            }}\n            placeholder={'최대 200글자까지 입력 가능합니다. (선택)'}\n            maxLength={200}\n            defaultValue={dataForm.description}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.description.max}\n            proGressNum={dataForm.description.length ?? 0}\n            error={dataForm.description.length > 200 ? true : false}\n          />\n        </div>\n\n        <div className='imgs-container col'>\n          <FileInput\n            name={'타이틀 이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={1}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            handleErrorChange={handleErrorChange}\n            clearError={clearError}\n            defaultImgs={dataForm.projectTitleImage}\n            setWillDeleteImgs={true}\n          />\n\n          <FileInput\n            name={'이미지'}\n            width={'100%'}\n            height={'65rem'}\n            number={7}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            defaultImgs={dataForm.images}\n            setWillDeleteImgs={true}\n          />\n\n        </div>\n      </div>\n      <SubmitModalBox\n        submitTitle={'수정 확인'}\n        submitMessage={'수정 하기 전 내용은 복구 할 수 없습니다.'}\n        submitCheckHandler={()=> {\n          writeSubmitHandler(dataForm, errors, setErrors,'project',loginUserData.userInfo.memberId,projectId)\n          .then(()=>setApiResult(true))\n          .catch((err)=>{\n            setWhichError(err==='formError' ? false : true);\n            setApiResult(false)})\n          .finally(()=>setShowModal(true))\n        }}\n        cancelTitle={'취소 확인'}\n        cancelMessage={'취소시 수정한 내용은 저장되지 않습니다.'}\n        cancelCheckHandler ={toProject}\n      />\n    </StyleProjectWrite>\n  );\n}","export const shapingApiData = (obj,type) => {\n    const newData = {...obj};\n    for(let key in obj) {\n        if(key === 'images') {\n            const tempArr = [];\n            for(let i = 0; i < obj[key].length; i++) {\n                tempArr.push(obj[key][i].imageUrl);\n            }\n            newData[key] = tempArr;\n            newData.imageFile = new FormData();\n            newData.imageUrls = [];\n        } else if (key === 'projectTitleImage') {\n            newData[key] = [obj[key].imageUrl];\n            newData.titleImageFile = new FormData();\n            newData.titleImageUrl = '';\n        }\n    }\n    return newData;\n}\n"],"names":["DateSelect","_ref","defaultDate","width","handleInputChange","handleErrorChange","time","Date","_useState","useState","_useState2","_slicedToArray","resetDate","setResetDate","useEffect","length","parsingDate","getFullYear","getMonth","getDate","setOptions","options","i","push","value","label","yearOptions","monthOptions","days","dayOptions","_jsx","_Fragment","children","map","el","idx","Select","defaultLabel","onClickHandler","e","newDate","_toConsumableArray","settingByIndex","String","checkValidations","StyleProjectWrite","styled","Page","_templateObject","_taggedTemplateLiteral","custom","ProjectEdit","_dataForm$title$lengt","_dataForm$body$length","_dataForm$description","toProject","useNav","_useForm","useForm","projectWriteInitData","_useForm2","dataForm","setDataForm","_useError","useError","projectWriteRule","_useError2","errors","clearError","setErrors","projectId","useParams","loginUserData","useSelector","state","user","showModal","setShowModal","_useState3","_useState4","apiResult","setApiResult","_useState5","_useState6","whichError","setWhichError","_useState7","_useState8","firstResult","setFirstResult","api","get","concat","then","res","shapingApiData","data","catch","err","height","languagesOptions","arr","languages","_jsxs","className","Modal","type","setIsOpen","title","body","confirmHandler","WriteHeader","Input","onChange","target","placeholder","maxLength","defaultValue","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","lang","name","closedAt","EnterTag","defaultTags","tags","description","FileInput","number","defaultImgs","projectTitleImage","setWillDeleteImgs","images","SubmitModalBox","submitTitle","submitMessage","submitCheckHandler","writeSubmitHandler","userInfo","memberId","finally","cancelTitle","cancelMessage","cancelCheckHandler","obj","newData","_objectSpread","key","tempArr","imageUrl","imageFile","FormData","imageUrls","titleImageFile","titleImageUrl"],"sourceRoot":""}