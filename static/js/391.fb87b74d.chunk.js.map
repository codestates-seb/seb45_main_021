{"version":3,"file":"static/js/391.fb87b74d.chunk.js","mappings":"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","sources":["pages/NotFound.jsx","pages/ProjectEdit.jsx","utils/shapingApiData.js"],"sourcesContent":["import React from 'react';\nimport { styled } from 'styled-components';\nimport Page from '../components/common/Page';\nimport { StyleBackgroundButton } from '../components/common/Buttons';\nimport useNav from '../hooks/useNav';\n\nconst StyleNotFound = styled(Page)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h2 {\n    font-size: 15rem;\n    margin-bottom: 50px;\n    font-weight: bold;\n    color: var(--backgroundColor);\n    text-shadow: 0px 0px 10px var(--black-300);\n  }\n  span {\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 30px;\n    font-weight: var(--nanum-semi-bold);\n    color: var(--black-300);\n  }\n  button {\n    padding: 10px 25px;\n  }\n`;\n\nexport default function NotFound() {\n  const { toAbout } = useNav();\n  return (\n    <StyleNotFound>\n      <h2>404</h2>\n      <span>요청하신 페이지를 찾을 수 없습니다.</span>\n      <StyleBackgroundButton onClick={toAbout}>홈으로</StyleBackgroundButton>\n    </StyleNotFound>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport { StyleBorderButton } from '../components/common/Buttons';\nimport  useForm  from '../hooks/useForm';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteHeader from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport languages from '../static/languages'\nimport api from '../hooks/useAxiosInterceptor';\nimport { projectWriteInitData, projectWriteRule } from '../static/projectInit';\nimport { shapingApiData } from '../utils/shapingApiData';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Modal from '../components/common/Modal';\nimport useSubmitWriteEdit from '../hooks/useSubmitWriteEdit';\nimport { StyleProjectWrite } from './ProjectWrite';\nimport NotFound from './NotFound';\n\nexport default function ProjectEdit() {\n  const {toProject} = useNav();\n  const {projectId} = useParams();\n  const [dataForm, handleInputChange, clearForm, setDataForm] = useForm(projectWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError({}, projectWriteRule);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, isSuccess, submitHandler] = useSubmitWriteEdit();\n  //false면 프론트측 에러 true면 백측에러\n  const [firstApiSuccess, setFirstApiSuccess] = useState(true);\n  const loginUserData = useSelector(state=>state.user);\n\n  useEffect(()=>{\n    api.get(`/projects/${projectId}`)\n    .then(res=>{\n      setDataForm(shapingApiData(res.data))\n      setFirstApiSuccess(true);\n    })\n    .catch(err=>{\n      setShowModal(true);\n      if(err.message === \"Request failed with status code 404\") {\n        setFirstApiSuccess('404');\n      } else {\n        setFirstApiSuccess(false);\n      }\n    });\n  },[])\n\n  const width = '100%';\n  const height = '30rem';\n\n  const languagesOptions = (() => {\n      const arr = [];\n      arr.push({value : '', label : '-'});\n      for(let i = 0; i < languages.length; i++) {\n        arr.push({value: languages[i], label : languages[i]});\n      }\n      return arr;\n  })()\n  \n  return (\n    <>\n    {firstApiSuccess === '404' ? <NotFound/> : firstApiSuccess === true &&\n    <StyleProjectWrite className='col'>\n      {showModal && <Modal\n        type={'alert'}\n        setIsOpen={setShowModal}\n        title={'알림'}\n        body={firstApiSuccess ? apiResult : '서버와의 통신에 실패했습니다. 다시 시도해 주세요.'}\n        confirmHandler={() => !firstApiSuccess || isSuccess ? toProject() : setShowModal(false)}\n      />}\n      <WriteHeader type='project' state='edit'/>\n      <div className='write-wrapper row'>\n        <div className='input-container col'>\n\n          <Input\n            label={'프로젝트 제목'}\n            width={'100%'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value,'title');\n              handleErrorChange(null,e.target.value,'title',checkValidations);\n            }}\n            placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n            type='text'\n            maxLength={30}\n            defaultValue={dataForm.title}\n          />\n\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.title.max}\n            proGressNum={dataForm.title.length ?? 0}\n            error={dataForm.title.length < 10 ? true : false}\n          />\n\n          <SelectBox\n            text={'사용할 언어를 선택 해주세요.'}\n            component={\n              <Select\n                width={width}\n                options={languagesOptions}\n                defaultLabel={dataForm.lang}\n                onClickHandler={(e)=>{\n                  handleInputChange(null,e,'lang')\n                  handleErrorChange(null,e,'lang',checkValidations)\n                }}\n              />}\n            error={errors.lang}\n            name='언어'\n          />\n          \n          <EnterTag\n            width=\"100%\"\n            height=\"3.5rem\"\n            placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n            defaultTags={(dataForm.tags.length === 1 && dataForm.tags[0] === '') ? [] : dataForm.tags}\n            handleInputChange={handleInputChange}\n          />\n          \n          <Input\n            label={'기획서'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'body')\n              handleErrorChange(null,e.target.value, 'body',checkValidations)\n            }}\n            placeholder={'최소 100 ~ 500글자까지 입력 가능합니다. (필수)'}\n            maxLength={500}\n            defaultValue={dataForm.body}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.body.max}\n            proGressNum={dataForm.body.length ?? 0}\n            error={dataForm.body.length < 100 ? true : false}\n          />\n\n          <Input\n            label={'상세 요강'}\n            width={width}\n            height={height}\n            type={'textarea'}\n            onChange={(e)=>{\n              handleInputChange(null,e.target.value, 'description')\n              handleErrorChange(null,e.target.value, 'description', checkValidations)\n            }}\n            placeholder={'최대 200글자까지 입력 가능합니다. (선택)'}\n            maxLength={200}\n            defaultValue={dataForm.description}\n          />\n          <ProGress\n            className={'margin-top-remove'}\n            width={'100%'}\n            height={'1.2rem'}\n            fontSize={'1.2rem'}\n            comPleteNum={projectWriteRule.description.max}\n            proGressNum={dataForm.description.length ?? 0}\n            error={dataForm.description.length > 200 ? true : false}\n          />\n        </div>\n\n        <div className='imgs-container col'>\n          <FileInput\n            name={'타이틀 이미지'}\n            width={'100%'}\n            height={'55rem'}\n            number={1}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            handleErrorChange={handleErrorChange}\n            clearError={clearError}\n            defaultImgs={dataForm.titleImage}\n            setWillDeleteImgs={true}\n          />\n\n          <FileInput\n            name={'이미지'}\n            width={'100%'}\n            height={'55rem'}\n            number={7}\n            dataForm={dataForm}\n            handleInputChange={handleInputChange}\n            defaultImgs={dataForm.images}\n            setWillDeleteImgs={true}\n          />\n\n        </div>\n      </div>\n      <div className='button-box'>\n      <StyleBorderButton\n          onClick={()=>{\n            setShowModal(true);\n            submitHandler(dataForm,errors,setErrors,'project',loginUserData.userInfo.memberId, projectId)\n          }}\n        >\n          수정\n        </StyleBorderButton>\n        <StyleBorderButton>\n          취소\n        </StyleBorderButton>\n      </div>\n    </StyleProjectWrite>}\n    </>\n  );\n}","export const shapingApiData = (obj,type) => {\n    const newData = {...obj};\n    for(let key in obj) {\n        if(key === 'images') {\n            const tempArr = [];\n            for(let i = 0; i < obj[key].length; i++) {\n                tempArr.push(obj[key][i].imageUrl);\n            }\n            newData[key] = tempArr;\n            newData.imageFile = new FormData();\n            newData.imageUrls = [];\n        } else if (key === 'projectTitleImage' || key === 'portfolioTitleImage') {\n            newData.titleImage = [obj[key].imageUrl];\n            newData.titleImageFile = new FormData();\n            newData.titleImageUrl = '';\n        }\n        \n    }\n    return newData;\n}\n"],"names":["StyleNotFound","styled","Page","_templateObject","_taggedTemplateLiteral","NotFound","toAbout","useNav","_jsxs","children","_jsx","StyleBackgroundButton","onClick","ProjectEdit","_dataForm$title$lengt","_dataForm$body$length","_dataForm$description","toProject","projectId","useParams","_useForm","useForm","projectWriteInitData","_useForm2","_slicedToArray","dataForm","handleInputChange","setDataForm","_useError","useError","projectWriteRule","_useError2","errors","handleErrorChange","clearError","setErrors","_useState","useState","_useState2","showModal","setShowModal","_useSubmitWriteEdit","useSubmitWriteEdit","_useSubmitWriteEdit2","apiResult","isSuccess","submitHandler","_useState3","_useState4","firstApiSuccess","setFirstApiSuccess","loginUserData","useSelector","state","user","useEffect","api","get","concat","then","res","shapingApiData","data","catch","err","message","width","height","languagesOptions","arr","push","value","label","i","languages","length","_Fragment","StyleProjectWrite","className","Modal","type","setIsOpen","title","body","confirmHandler","WriteHeader","Input","onChange","e","target","checkValidations","placeholder","maxLength","defaultValue","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","Select","options","defaultLabel","lang","onClickHandler","name","EnterTag","defaultTags","tags","description","FileInput","number","defaultImgs","titleImage","setWillDeleteImgs","images","StyleBorderButton","userInfo","memberId","obj","newData","_objectSpread","key","tempArr","imageUrl","imageFile","FormData","imageUrls","titleImageFile","titleImageUrl"],"sourceRoot":""}