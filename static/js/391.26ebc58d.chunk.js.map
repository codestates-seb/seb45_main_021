{"version":3,"file":"static/js/391.26ebc58d.chunk.js","mappings":"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","sources":["pages/NotFound.jsx","pages/ProjectEdit.jsx","utils/shapingApiData.js"],"sourcesContent":["import React from 'react';\nimport { styled } from 'styled-components';\nimport Page from '../components/common/Page';\nimport { StyleBackgroundButton } from '../components/common/Buttons';\nimport useNav from '../hooks/useNav';\n\nconst StyleNotFound = styled(Page)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h2 {\n    font-size: 15rem;\n    margin-bottom: 50px;\n    font-weight: bold;\n    color: var(--backgroundColor);\n    text-shadow: 0px 0px 10px var(--black-300);\n  }\n  span {\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 30px;\n    font-weight: var(--nanum-semi-bold);\n    color: var(--black-300);\n  }\n  button {\n    padding: 10px 25px;\n  }\n`;\n\nexport default function NotFound() {\n  const { toAbout } = useNav();\n  return (\n    <StyleNotFound>\n      <h2>404</h2>\n      <span>요청하신 페이지를 찾을 수 없습니다.</span>\n      <StyleBackgroundButton onClick={toAbout}>홈으로</StyleBackgroundButton>\n    </StyleNotFound>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Input from '../components/common/Input';\nimport Select from '../components/common/Select';\nimport FileInput from '../components/common/FileInput';\nimport { StyleBorderButton } from '../components/common/Buttons';\nimport useForm from '../hooks/useForm';\nimport useNav from '../hooks/useNav';\nimport EnterTag from '../components/PfPjPublic/EnterTag';\nimport WriteHeader from '../components/PfPjPublic/WriteHeader';\nimport SelectBox from '../components/PfPjPublic/SelectBox';\nimport useError from '../hooks/useError';\nimport { checkValidations } from '../utils/checkValidations';\nimport ProGress from '../components/common/ProGress';\nimport languages from '../static/languages';\nimport api from '../hooks/useAxiosInterceptor';\nimport { projectWriteInitData, projectWriteRule } from '../static/projectInit';\nimport { shapingApiData } from '../utils/shapingApiData';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Modal from '../components/common/Modal';\nimport useSubmitWriteEdit from '../hooks/useSubmitWriteEdit';\nimport { StyleProjectWrite } from './ProjectWrite';\nimport NotFound from './NotFound';\n\nexport default function ProjectEdit() {\n  const { toProject } = useNav();\n  const { projectId } = useParams();\n  const [dataForm, handleInputChange, clearForm, setDataForm] = useForm(projectWriteInitData);\n  const [errors, handleErrorChange, clearError, setErrors] = useError({}, projectWriteRule);\n  const [showModal, setShowModal] = useState(false);\n  const [apiResult, isSuccess, submitHandler, setApiResult] = useSubmitWriteEdit();\n  const [isCancel, setIsCancel] = useState(false);\n  //false면 프론트측 에러 true면 백측에러\n  const [firstApiSuccess, setFirstApiSuccess] = useState(true);\n  const loginUserData = useSelector((state) => state.user);\n  const {\n    userInfo: { memberId },\n  } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    api\n      .get(`/projects/${projectId}`)\n      .then((res) => {\n        if (res.data.memberId !== memberId) {\n          toProject();\n          alert('수정 권한이 없습니다');\n        }\n        setDataForm(shapingApiData(res.data));\n        setFirstApiSuccess(true);\n      })\n      .catch((err) => {\n        setShowModal(true);\n        if (err.message === 'Request failed with status code 404') {\n          setFirstApiSuccess('404');\n        } else {\n          setFirstApiSuccess(false);\n        }\n      });\n  }, []);\n\n  const width = '100%';\n  const height = '30rem';\n\n  const languagesOptions = (() => {\n    const arr = [];\n    arr.push({ value: '', label: '-' });\n    for (let i = 0; i < languages.length; i++) {\n      arr.push({ value: languages[i], label: languages[i] });\n    }\n    return arr;\n  })();\n\n  return (\n    <>\n      {firstApiSuccess === '404' ? (\n        <NotFound />\n      ) : (\n        firstApiSuccess === true && (\n          <StyleProjectWrite className=\"col\">\n            {showModal && (\n              <Modal\n                type={isCancel ? 'confirm' : 'alert'}\n                setIsOpen={setShowModal}\n                title={'알림'}\n                body={\n                  firstApiSuccess ? apiResult : '서버와의 통신에 실패했습니다. 다시 시도해 주세요.'\n                }\n                confirmHandler={() =>\n                  !firstApiSuccess || isSuccess || isCancel ? toProject() : setShowModal(false)\n                }\n              />\n            )}\n            <WriteHeader type=\"project\" state=\"edit\" />\n            <div className=\"write-wrapper row\">\n              <div className=\"input-container col\">\n                <Input\n                  label={'프로젝트 제목'}\n                  width={'100%'}\n                  onChange={(e) => {\n                    handleInputChange(null, e.target.value, 'title');\n                    handleErrorChange(null, e.target.value, 'title', checkValidations);\n                  }}\n                  placeholder={'최소 10 글자 최대 30글자까지 입력 가능 합니다. (필수)'}\n                  type=\"text\"\n                  maxLength={30}\n                  defaultValue={dataForm.title}\n                />\n\n                <ProGress\n                  className={'margin-top-remove'}\n                  width={'100%'}\n                  height={'1.2rem'}\n                  fontSize={'1.2rem'}\n                  comPleteNum={projectWriteRule.title.max}\n                  proGressNum={dataForm.title.length ?? 0}\n                  error={dataForm.title.length < 10 ? true : false}\n                />\n\n                <SelectBox\n                  text={'사용할 언어를 선택 해주세요.'}\n                  component={\n                    <Select\n                      width={width}\n                      options={languagesOptions}\n                      defaultLabel={dataForm.lang}\n                      onClickHandler={(e) => {\n                        handleInputChange(null, e, 'lang');\n                        handleErrorChange(null, e, 'lang', checkValidations);\n                      }}\n                    />\n                  }\n                  error={errors.lang}\n                  name=\"언어\"\n                />\n\n                <EnterTag\n                  width=\"100%\"\n                  height=\"3.5rem\"\n                  placeholder=\"태그는 최대 3개까지 등록이 가능합니다.\"\n                  defaultTags={\n                    dataForm.tags.length === 1 && dataForm.tags[0] === '' ? [] : dataForm.tags\n                  }\n                  handleInputChange={handleInputChange}\n                />\n\n                <Input\n                  label={'기획서'}\n                  width={width}\n                  height={height}\n                  type={'textarea'}\n                  onChange={(e) => {\n                    handleInputChange(null, e.target.value, 'body');\n                    handleErrorChange(null, e.target.value, 'body', checkValidations);\n                  }}\n                  placeholder={'최소 100 ~ 500글자까지 입력 가능합니다. (필수)'}\n                  maxLength={500}\n                  defaultValue={dataForm.body}\n                />\n                <ProGress\n                  className={'margin-top-remove'}\n                  width={'100%'}\n                  height={'1.2rem'}\n                  fontSize={'1.2rem'}\n                  comPleteNum={projectWriteRule.body.max}\n                  proGressNum={dataForm.body.length ?? 0}\n                  error={dataForm.body.length < 100 ? true : false}\n                />\n\n                <Input\n                  label={'상세 요강'}\n                  width={width}\n                  height={height}\n                  type={'textarea'}\n                  onChange={(e) => {\n                    handleInputChange(null, e.target.value, 'description');\n                    handleErrorChange(null, e.target.value, 'description', checkValidations);\n                  }}\n                  placeholder={'최대 200글자까지 입력 가능합니다. (선택)'}\n                  maxLength={200}\n                  defaultValue={dataForm.description}\n                />\n                <ProGress\n                  className={'margin-top-remove'}\n                  width={'100%'}\n                  height={'1.2rem'}\n                  fontSize={'1.2rem'}\n                  comPleteNum={projectWriteRule.description.max}\n                  proGressNum={dataForm.description.length ?? 0}\n                  error={dataForm.description.length > 200 ? true : false}\n                />\n              </div>\n\n              <div className=\"imgs-container col\">\n                <FileInput\n                  name={'타이틀 이미지'}\n                  width={'100%'}\n                  height={'55rem'}\n                  number={1}\n                  dataForm={dataForm}\n                  handleInputChange={handleInputChange}\n                  handleErrorChange={handleErrorChange}\n                  clearError={clearError}\n                  defaultImgs={dataForm.titleImage}\n                  setWillDeleteImgs={true}\n                />\n\n                <FileInput\n                  name={'이미지'}\n                  width={'100%'}\n                  height={'55rem'}\n                  number={7}\n                  dataForm={dataForm}\n                  handleInputChange={handleInputChange}\n                  defaultImgs={dataForm.images}\n                  setWillDeleteImgs={true}\n                />\n              </div>\n            </div>\n            <div className=\"button-box\">\n              <StyleBorderButton\n                onClick={() => {\n                  setShowModal(true);\n                  submitHandler(\n                    dataForm,\n                    errors,\n                    setErrors,\n                    'project',\n                    loginUserData.userInfo.memberId,\n                    projectId,\n                  );\n                }}\n              >\n                수정\n              </StyleBorderButton>\n              <StyleBorderButton\n                onClick={()=>{\n                  setShowModal(true);\n                  setIsCancel(true);\n                  setApiResult('작성 취소시 작성한 내용은 저장되지 않습니다.');\n                }}\n              >취소</StyleBorderButton>\n            </div>\n          </StyleProjectWrite>\n        )\n      )}\n    </>\n  );\n}\n","export const shapingApiData = (obj,type) => {\n    const newData = {...obj};\n    for(let key in obj) {\n        if(key === 'images') {\n            const tempArr = [];\n            for(let i = 0; i < obj[key].length; i++) {\n                tempArr.push(obj[key][i].imageUrl);\n            }\n            newData[key] = tempArr;\n            newData.imageFile = new FormData();\n            newData.imageUrls = [];\n        } else if (key === 'projectTitleImage' || key === 'portfolioTitleImage') {\n            newData.titleImage = [obj[key].imageUrl];\n            newData.titleImageFile = new FormData();\n            newData.titleImageUrl = '';\n        }\n        \n    }\n    return newData;\n}\n"],"names":["StyleNotFound","styled","Page","_templateObject","_taggedTemplateLiteral","NotFound","toAbout","useNav","_jsxs","children","_jsx","StyleBackgroundButton","onClick","ProjectEdit","_dataForm$title$lengt","_dataForm$body$length","_dataForm$description","toProject","projectId","useParams","_useForm","useForm","projectWriteInitData","_useForm2","_slicedToArray","dataForm","handleInputChange","setDataForm","_useError","useError","projectWriteRule","_useError2","errors","handleErrorChange","clearError","setErrors","_useState","useState","_useState2","showModal","setShowModal","_useSubmitWriteEdit","useSubmitWriteEdit","_useSubmitWriteEdit2","apiResult","isSuccess","submitHandler","setApiResult","_useState3","_useState4","isCancel","setIsCancel","_useState5","_useState6","firstApiSuccess","setFirstApiSuccess","loginUserData","useSelector","state","user","memberId","userInfo","useEffect","api","get","concat","then","res","data","alert","shapingApiData","catch","err","message","width","height","languagesOptions","arr","push","value","label","i","languages","length","_Fragment","StyleProjectWrite","className","Modal","type","setIsOpen","title","body","confirmHandler","WriteHeader","Input","onChange","e","target","checkValidations","placeholder","maxLength","defaultValue","ProGress","fontSize","comPleteNum","max","proGressNum","error","SelectBox","text","component","Select","options","defaultLabel","lang","onClickHandler","name","EnterTag","defaultTags","tags","description","FileInput","number","defaultImgs","titleImage","setWillDeleteImgs","images","StyleBorderButton","obj","newData","_objectSpread","key","tempArr","imageUrl","imageFile","FormData","imageUrls","titleImageFile","titleImageUrl"],"sourceRoot":""}